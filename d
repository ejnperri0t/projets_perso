{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyNP8TD1IL7jHpfebT47kLyN"
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "source": [
        "Découverte et entraînement sur altair avec les stats des swiss stage de LoL."
      ],
      "metadata": {
        "id": "BdNfEr2VaW8J"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "from google.colab import drive\n",
        "drive.mount('/content/drive')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "ICfGX491XnRr",
        "outputId": "fdddcca9-dfaa-4816-9687-06a9e7c19fb7"
      },
      "execution_count": 9,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "pip install pingouin"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "u0X-YRqWSjIx",
        "outputId": "06cccd87-713b-472e-d037-d2b099cc57ef"
      },
      "execution_count": 10,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Requirement already satisfied: pingouin in /usr/local/lib/python3.11/dist-packages (0.5.5)\n",
            "Requirement already satisfied: matplotlib in /usr/local/lib/python3.11/dist-packages (from pingouin) (3.10.0)\n",
            "Requirement already satisfied: numpy in /usr/local/lib/python3.11/dist-packages (from pingouin) (2.0.2)\n",
            "Requirement already satisfied: pandas>=1.5 in /usr/local/lib/python3.11/dist-packages (from pingouin) (2.2.2)\n",
            "Requirement already satisfied: pandas-flavor in /usr/local/lib/python3.11/dist-packages (from pingouin) (0.6.0)\n",
            "Requirement already satisfied: scikit-learn>=1.2 in /usr/local/lib/python3.11/dist-packages (from pingouin) (1.6.1)\n",
            "Requirement already satisfied: scipy in /usr/local/lib/python3.11/dist-packages (from pingouin) (1.14.1)\n",
            "Requirement already satisfied: seaborn in /usr/local/lib/python3.11/dist-packages (from pingouin) (0.13.2)\n",
            "Requirement already satisfied: statsmodels in /usr/local/lib/python3.11/dist-packages (from pingouin) (0.14.4)\n",
            "Requirement already satisfied: tabulate in /usr/local/lib/python3.11/dist-packages (from pingouin) (0.9.0)\n",
            "Requirement already satisfied: python-dateutil>=2.8.2 in /usr/local/lib/python3.11/dist-packages (from pandas>=1.5->pingouin) (2.8.2)\n",
            "Requirement already satisfied: pytz>=2020.1 in /usr/local/lib/python3.11/dist-packages (from pandas>=1.5->pingouin) (2025.1)\n",
            "Requirement already satisfied: tzdata>=2022.7 in /usr/local/lib/python3.11/dist-packages (from pandas>=1.5->pingouin) (2025.1)\n",
            "Requirement already satisfied: joblib>=1.2.0 in /usr/local/lib/python3.11/dist-packages (from scikit-learn>=1.2->pingouin) (1.4.2)\n",
            "Requirement already satisfied: threadpoolctl>=3.1.0 in /usr/local/lib/python3.11/dist-packages (from scikit-learn>=1.2->pingouin) (3.6.0)\n",
            "Requirement already satisfied: contourpy>=1.0.1 in /usr/local/lib/python3.11/dist-packages (from matplotlib->pingouin) (1.3.1)\n",
            "Requirement already satisfied: cycler>=0.10 in /usr/local/lib/python3.11/dist-packages (from matplotlib->pingouin) (0.12.1)\n",
            "Requirement already satisfied: fonttools>=4.22.0 in /usr/local/lib/python3.11/dist-packages (from matplotlib->pingouin) (4.56.0)\n",
            "Requirement already satisfied: kiwisolver>=1.3.1 in /usr/local/lib/python3.11/dist-packages (from matplotlib->pingouin) (1.4.8)\n",
            "Requirement already satisfied: packaging>=20.0 in /usr/local/lib/python3.11/dist-packages (from matplotlib->pingouin) (24.2)\n",
            "Requirement already satisfied: pillow>=8 in /usr/local/lib/python3.11/dist-packages (from matplotlib->pingouin) (11.1.0)\n",
            "Requirement already satisfied: pyparsing>=2.3.1 in /usr/local/lib/python3.11/dist-packages (from matplotlib->pingouin) (3.2.1)\n",
            "Requirement already satisfied: xarray in /usr/local/lib/python3.11/dist-packages (from pandas-flavor->pingouin) (2025.1.2)\n",
            "Requirement already satisfied: patsy>=0.5.6 in /usr/local/lib/python3.11/dist-packages (from statsmodels->pingouin) (1.0.1)\n",
            "Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.11/dist-packages (from python-dateutil>=2.8.2->pandas>=1.5->pingouin) (1.17.0)\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import altair as alt\n",
        "import pingouin as pg\n",
        "from sklearn import decomposition"
      ],
      "metadata": {
        "id": "XtV9d-e9X-Es"
      },
      "execution_count": 11,
      "outputs": []
    },
    {
      "cell_type": "code",
      "execution_count": 12,
      "metadata": {
        "id": "toD9QEiLaVgV",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 423
        },
        "outputId": "d27abb60-49bc-488a-daaa-f1d3ea65717f"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "     Champion  Picks  Bans  Presence  Wins  Losses  Winrate   KDA Avg BT  \\\n",
              "0      Aurora      9    30     100.0   7.0     2.0     78.0   6.6    3.6   \n",
              "1        Yone     18    19      95.0  13.0     5.0     72.0   4.4    3.2   \n",
              "2        Rell     26     5      79.0  15.0    11.0     58.0   3.0    8.8   \n",
              "3         Jax     15    15      77.0   6.0     9.0     40.0   2.6      5   \n",
              "4     Skarner     13    17      77.0   7.0     6.0     54.0   3.9      4   \n",
              "..        ...    ...   ...       ...   ...     ...      ...   ...    ...   \n",
              "62      Urgot      1     0       3.0   0.0     1.0      0.0   2.3      -   \n",
              "63   Xin Zhao      1     0       3.0   1.0     0.0    100.0  11.0      -   \n",
              "67    Camille      1     0       3.0   1.0     0.0    100.0   6.5      -   \n",
              "68     Lillia      1     0       3.0   0.0     1.0      0.0   4.0      -   \n",
              "70       Hwei      1     0       3.0   1.0     0.0    100.0  19.0      -   \n",
              "\n",
              "          GT   CSM    DPM    GPM  CSD@15  GD@15  XPD@15  \n",
              "0   32:52:00   7.9  678.0  402.0     0.6   76.0   -10.0  \n",
              "1   32:14:00   9.6  711.0  451.0     6.7  434.0   372.0  \n",
              "2   34:22:00   1.0  144.0  247.0    -0.5   11.0   -58.0  \n",
              "3   35:00:00   7.8  403.0  396.0    -8.9 -128.0  -201.0  \n",
              "4   31:48:00   5.8  372.0  332.0     2.4   77.0    77.0  \n",
              "..       ...   ...    ...    ...     ...    ...     ...  \n",
              "62  33:26:00  10.2  640.0  474.0    20.0  445.0   613.0  \n",
              "63  32:48:00   7.2  341.0  383.0     2.0  647.0    14.0  \n",
              "67  39:50:00   8.8  554.0  466.0    15.0  821.0   448.0  \n",
              "68  45:40:00   6.7  386.0  347.0    -7.0 -865.0  -495.0  \n",
              "70  37:44:00   7.2  778.0  442.0   -11.0  -26.0  -727.0  \n",
              "\n",
              "[64 rows x 16 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-735dedb1-920b-4783-b52d-7bab2c3e65de\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Champion</th>\n",
              "      <th>Picks</th>\n",
              "      <th>Bans</th>\n",
              "      <th>Presence</th>\n",
              "      <th>Wins</th>\n",
              "      <th>Losses</th>\n",
              "      <th>Winrate</th>\n",
              "      <th>KDA</th>\n",
              "      <th>Avg BT</th>\n",
              "      <th>GT</th>\n",
              "      <th>CSM</th>\n",
              "      <th>DPM</th>\n",
              "      <th>GPM</th>\n",
              "      <th>CSD@15</th>\n",
              "      <th>GD@15</th>\n",
              "      <th>XPD@15</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Aurora</td>\n",
              "      <td>9</td>\n",
              "      <td>30</td>\n",
              "      <td>100.0</td>\n",
              "      <td>7.0</td>\n",
              "      <td>2.0</td>\n",
              "      <td>78.0</td>\n",
              "      <td>6.6</td>\n",
              "      <td>3.6</td>\n",
              "      <td>32:52:00</td>\n",
              "      <td>7.9</td>\n",
              "      <td>678.0</td>\n",
              "      <td>402.0</td>\n",
              "      <td>0.6</td>\n",
              "      <td>76.0</td>\n",
              "      <td>-10.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Yone</td>\n",
              "      <td>18</td>\n",
              "      <td>19</td>\n",
              "      <td>95.0</td>\n",
              "      <td>13.0</td>\n",
              "      <td>5.0</td>\n",
              "      <td>72.0</td>\n",
              "      <td>4.4</td>\n",
              "      <td>3.2</td>\n",
              "      <td>32:14:00</td>\n",
              "      <td>9.6</td>\n",
              "      <td>711.0</td>\n",
              "      <td>451.0</td>\n",
              "      <td>6.7</td>\n",
              "      <td>434.0</td>\n",
              "      <td>372.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Rell</td>\n",
              "      <td>26</td>\n",
              "      <td>5</td>\n",
              "      <td>79.0</td>\n",
              "      <td>15.0</td>\n",
              "      <td>11.0</td>\n",
              "      <td>58.0</td>\n",
              "      <td>3.0</td>\n",
              "      <td>8.8</td>\n",
              "      <td>34:22:00</td>\n",
              "      <td>1.0</td>\n",
              "      <td>144.0</td>\n",
              "      <td>247.0</td>\n",
              "      <td>-0.5</td>\n",
              "      <td>11.0</td>\n",
              "      <td>-58.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Jax</td>\n",
              "      <td>15</td>\n",
              "      <td>15</td>\n",
              "      <td>77.0</td>\n",
              "      <td>6.0</td>\n",
              "      <td>9.0</td>\n",
              "      <td>40.0</td>\n",
              "      <td>2.6</td>\n",
              "      <td>5</td>\n",
              "      <td>35:00:00</td>\n",
              "      <td>7.8</td>\n",
              "      <td>403.0</td>\n",
              "      <td>396.0</td>\n",
              "      <td>-8.9</td>\n",
              "      <td>-128.0</td>\n",
              "      <td>-201.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Skarner</td>\n",
              "      <td>13</td>\n",
              "      <td>17</td>\n",
              "      <td>77.0</td>\n",
              "      <td>7.0</td>\n",
              "      <td>6.0</td>\n",
              "      <td>54.0</td>\n",
              "      <td>3.9</td>\n",
              "      <td>4</td>\n",
              "      <td>31:48:00</td>\n",
              "      <td>5.8</td>\n",
              "      <td>372.0</td>\n",
              "      <td>332.0</td>\n",
              "      <td>2.4</td>\n",
              "      <td>77.0</td>\n",
              "      <td>77.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>62</th>\n",
              "      <td>Urgot</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>3.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>2.3</td>\n",
              "      <td>-</td>\n",
              "      <td>33:26:00</td>\n",
              "      <td>10.2</td>\n",
              "      <td>640.0</td>\n",
              "      <td>474.0</td>\n",
              "      <td>20.0</td>\n",
              "      <td>445.0</td>\n",
              "      <td>613.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>63</th>\n",
              "      <td>Xin Zhao</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>3.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>100.0</td>\n",
              "      <td>11.0</td>\n",
              "      <td>-</td>\n",
              "      <td>32:48:00</td>\n",
              "      <td>7.2</td>\n",
              "      <td>341.0</td>\n",
              "      <td>383.0</td>\n",
              "      <td>2.0</td>\n",
              "      <td>647.0</td>\n",
              "      <td>14.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>67</th>\n",
              "      <td>Camille</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>3.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>100.0</td>\n",
              "      <td>6.5</td>\n",
              "      <td>-</td>\n",
              "      <td>39:50:00</td>\n",
              "      <td>8.8</td>\n",
              "      <td>554.0</td>\n",
              "      <td>466.0</td>\n",
              "      <td>15.0</td>\n",
              "      <td>821.0</td>\n",
              "      <td>448.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>68</th>\n",
              "      <td>Lillia</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>3.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>4.0</td>\n",
              "      <td>-</td>\n",
              "      <td>45:40:00</td>\n",
              "      <td>6.7</td>\n",
              "      <td>386.0</td>\n",
              "      <td>347.0</td>\n",
              "      <td>-7.0</td>\n",
              "      <td>-865.0</td>\n",
              "      <td>-495.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>70</th>\n",
              "      <td>Hwei</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>3.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>100.0</td>\n",
              "      <td>19.0</td>\n",
              "      <td>-</td>\n",
              "      <td>37:44:00</td>\n",
              "      <td>7.2</td>\n",
              "      <td>778.0</td>\n",
              "      <td>442.0</td>\n",
              "      <td>-11.0</td>\n",
              "      <td>-26.0</td>\n",
              "      <td>-727.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>64 rows × 16 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-735dedb1-920b-4783-b52d-7bab2c3e65de')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-735dedb1-920b-4783-b52d-7bab2c3e65de button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-735dedb1-920b-4783-b52d-7bab2c3e65de');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-bd34be11-dbd3-499f-96e7-6135635886e4\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-bd34be11-dbd3-499f-96e7-6135635886e4')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-bd34be11-dbd3-499f-96e7-6135635886e4 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "  <div id=\"id_4b9ebb3f-c247-4b54-9175-2fed972838cd\">\n",
              "    <style>\n",
              "      .colab-df-generate {\n",
              "        background-color: #E8F0FE;\n",
              "        border: none;\n",
              "        border-radius: 50%;\n",
              "        cursor: pointer;\n",
              "        display: none;\n",
              "        fill: #1967D2;\n",
              "        height: 32px;\n",
              "        padding: 0 0 0 0;\n",
              "        width: 32px;\n",
              "      }\n",
              "\n",
              "      .colab-df-generate:hover {\n",
              "        background-color: #E2EBFA;\n",
              "        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "        fill: #174EA6;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate {\n",
              "        background-color: #3B4455;\n",
              "        fill: #D2E3FC;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate:hover {\n",
              "        background-color: #434B5C;\n",
              "        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "        fill: #FFFFFF;\n",
              "      }\n",
              "    </style>\n",
              "    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n",
              "            title=\"Generate code using this dataframe.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "    <script>\n",
              "      (() => {\n",
              "      const buttonEl =\n",
              "        document.querySelector('#id_4b9ebb3f-c247-4b54-9175-2fed972838cd button.colab-df-generate');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      buttonEl.onclick = () => {\n",
              "        google.colab.notebook.generateWithVariable('df');\n",
              "      }\n",
              "      })();\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "df",
              "summary": "{\n  \"name\": \"df\",\n  \"rows\": 64,\n  \"fields\": [\n    {\n      \"column\": \"Champion\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 64,\n        \"samples\": [\n          \"\\u00a0Nami\",\n          \"\\u00a0Twitch\",\n          \"\\u00a0Aurora\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Picks\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5,\n        \"min\": 1,\n        \"max\": 26,\n        \"num_unique_values\": 19,\n        \"samples\": [\n          9,\n          5,\n          7\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Bans\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 6,\n        \"min\": 0,\n        \"max\": 30,\n        \"num_unique_values\": 19,\n        \"samples\": [\n          30,\n          24,\n          6\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Presence\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 27.51217263062194,\n        \"min\": 3.0,\n        \"max\": 100.0,\n        \"num_unique_values\": 26,\n        \"samples\": [\n          59.0,\n          28.0,\n          100.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Wins\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3.4706464678445577,\n        \"min\": 0.0,\n        \"max\": 15.0,\n        \"num_unique_values\": 13,\n        \"samples\": [\n          1.0,\n          5.0,\n          7.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Losses\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2.7741990836195507,\n        \"min\": 0.0,\n        \"max\": 11.0,\n        \"num_unique_values\": 11,\n        \"samples\": [\n          3.0,\n          2.0,\n          1.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Winrate\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 33.19662442200823,\n        \"min\": 0.0,\n        \"max\": 100.0,\n        \"num_unique_values\": 23,\n        \"samples\": [\n          25.0,\n          82.0,\n          78.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"KDA\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4.188160928651825,\n        \"min\": 0.9,\n        \"max\": 21.0,\n        \"num_unique_values\": 47,\n        \"samples\": [\n          8.0,\n          7.0,\n          3.2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Avg BT\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 35,\n        \"samples\": [\n          \"6.8\",\n          \"9.4\",\n          \"9\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"GT\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 58,\n        \"samples\": [\n          \"32:52:00\",\n          \"32:33:00\",\n          \"32:16:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CSM\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2.694407420789653,\n        \"min\": 1.0,\n        \"max\": 10.4,\n        \"num_unique_values\": 40,\n        \"samples\": [\n          10.4,\n          1.2,\n          8.6\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"DPM\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 227.38135697109354,\n        \"min\": 114.0,\n        \"max\": 1063.0,\n        \"num_unique_values\": 62,\n        \"samples\": [\n          719.0,\n          398.0,\n          678.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"GPM\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 73.08054204095643,\n        \"min\": 209.0,\n        \"max\": 512.0,\n        \"num_unique_values\": 55,\n        \"samples\": [\n          430.0,\n          457.0,\n          434.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CSD@15\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 11.51801857891048,\n        \"min\": -28.0,\n        \"max\": 30.0,\n        \"num_unique_values\": 53,\n        \"samples\": [\n          6.8,\n          23.5,\n          3.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"GD@15\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 568.74473222748,\n        \"min\": -1259.0,\n        \"max\": 1976.0,\n        \"num_unique_values\": 63,\n        \"samples\": [\n          -865.0,\n          323.0,\n          76.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"XPD@15\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 527.4192473734723,\n        \"min\": -1260.0,\n        \"max\": 1302.0,\n        \"num_unique_values\": 64,\n        \"samples\": [\n          20.0,\n          57.0,\n          -10.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 12
        }
      ],
      "source": [
        "#Chargement des données.\n",
        "data= '/content/drive/MyDrive/champions.csv'\n",
        "df=pd.read_csv(data, on_bad_lines=\"skip\")\n",
        "df=df.dropna() #On ne travaille que sur les champions pick, même certains champions non-pick ont simplement été permaban.\n",
        "df['Winrate'] = df['Winrate'].str.replace('%', '').astype(float)  #Change le winrate en float\n",
        "df['Presence'] = df['Presence'].str.replace('%', '').astype(float) #change la présence en float\n",
        "df"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Utilisons maintenant Altair pour visualiser deux-trois trucs."
      ],
      "metadata": {
        "id": "_mrM6erybcyf"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "#Le winrate en fonction du nbr de picks.\n",
        "alt.Chart(df).mark_point().encode(\n",
        "    x='Picks',\n",
        "    y='Winrate',\n",
        "    tooltip=['Champion', 'Bans', 'Picks', 'Wins',\t'Losses','CSM','Winrate'],\n",
        "    color=alt.Color('Presence', scale=alt.Scale(scheme='reds'))\n",
        ")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 368
        },
        "id": "UoPMQ23tbcOD",
        "outputId": "6bf0825c-d6b7-4992-cc7f-c39459f1c9dc"
      },
      "execution_count": 13,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "\n",
              "<style>\n",
              "  #altair-viz-f9c591c55a874791a9bca0a38d16961f.vega-embed {\n",
              "    width: 100%;\n",
              "    display: flex;\n",
              "  }\n",
              "\n",
              "  #altair-viz-f9c591c55a874791a9bca0a38d16961f.vega-embed details,\n",
              "  #altair-viz-f9c591c55a874791a9bca0a38d16961f.vega-embed details summary {\n",
              "    position: relative;\n",
              "  }\n",
              "</style>\n",
              "<div id=\"altair-viz-f9c591c55a874791a9bca0a38d16961f\"></div>\n",
              "<script type=\"text/javascript\">\n",
              "  var VEGA_DEBUG = (typeof VEGA_DEBUG == \"undefined\") ? {} : VEGA_DEBUG;\n",
              "  (function(spec, embedOpt){\n",
              "    let outputDiv = document.currentScript.previousElementSibling;\n",
              "    if (outputDiv.id !== \"altair-viz-f9c591c55a874791a9bca0a38d16961f\") {\n",
              "      outputDiv = document.getElementById(\"altair-viz-f9c591c55a874791a9bca0a38d16961f\");\n",
              "    }\n",
              "\n",
              "    const paths = {\n",
              "      \"vega\": \"https://cdn.jsdelivr.net/npm/vega@5?noext\",\n",
              "      \"vega-lib\": \"https://cdn.jsdelivr.net/npm/vega-lib?noext\",\n",
              "      \"vega-lite\": \"https://cdn.jsdelivr.net/npm/vega-lite@5.20.1?noext\",\n",
              "      \"vega-embed\": \"https://cdn.jsdelivr.net/npm/vega-embed@6?noext\",\n",
              "    };\n",
              "\n",
              "    function maybeLoadScript(lib, version) {\n",
              "      var key = `${lib.replace(\"-\", \"\")}_version`;\n",
              "      return (VEGA_DEBUG[key] == version) ?\n",
              "        Promise.resolve(paths[lib]) :\n",
              "        new Promise(function(resolve, reject) {\n",
              "          var s = document.createElement('script');\n",
              "          document.getElementsByTagName(\"head\")[0].appendChild(s);\n",
              "          s.async = true;\n",
              "          s.onload = () => {\n",
              "            VEGA_DEBUG[key] = version;\n",
              "            return resolve(paths[lib]);\n",
              "          };\n",
              "          s.onerror = () => reject(`Error loading script: ${paths[lib]}`);\n",
              "          s.src = paths[lib];\n",
              "        });\n",
              "    }\n",
              "\n",
              "    function showError(err) {\n",
              "      outputDiv.innerHTML = `<div class=\"error\" style=\"color:red;\">${err}</div>`;\n",
              "      throw err;\n",
              "    }\n",
              "\n",
              "    function displayChart(vegaEmbed) {\n",
              "      vegaEmbed(outputDiv, spec, embedOpt)\n",
              "        .catch(err => showError(`Javascript Error: ${err.message}<br>This usually means there's a typo in your chart specification. See the javascript console for the full traceback.`));\n",
              "    }\n",
              "\n",
              "    if(typeof define === \"function\" && define.amd) {\n",
              "      requirejs.config({paths});\n",
              "      let deps = [\"vega-embed\"];\n",
              "      require(deps, displayChart, err => showError(`Error loading script: ${err.message}`));\n",
              "    } else {\n",
              "      maybeLoadScript(\"vega\", \"5\")\n",
              "        .then(() => maybeLoadScript(\"vega-lite\", \"5.20.1\"))\n",
              "        .then(() => maybeLoadScript(\"vega-embed\", \"6\"))\n",
              "        .catch(showError)\n",
              "        .then(() => displayChart(vegaEmbed));\n",
              "    }\n",
              "  })({\"config\": {\"view\": {\"continuousWidth\": 300, \"continuousHeight\": 300}}, \"data\": {\"name\": \"data-2145461d1fecb32c28af25c426a6cced\"}, \"mark\": {\"type\": \"point\"}, \"encoding\": {\"color\": {\"field\": \"Presence\", \"scale\": {\"scheme\": \"reds\"}, \"type\": \"quantitative\"}, \"tooltip\": [{\"field\": \"Champion\", \"type\": \"nominal\"}, {\"field\": \"Bans\", \"type\": \"quantitative\"}, {\"field\": \"Picks\", \"type\": \"quantitative\"}, {\"field\": \"Wins\", \"type\": \"quantitative\"}, {\"field\": \"Losses\", \"type\": \"quantitative\"}, {\"field\": \"CSM\", \"type\": \"quantitative\"}, {\"field\": \"Winrate\", \"type\": \"quantitative\"}], \"x\": {\"field\": \"Picks\", \"type\": \"quantitative\"}, \"y\": {\"field\": \"Winrate\", \"type\": \"quantitative\"}}, \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.20.1.json\", \"datasets\": {\"data-2145461d1fecb32c28af25c426a6cced\": [{\"Champion\": \"\\u00a0Aurora\", \"Picks\": 9, \"Bans\": 30, \"Presence\": 100.0, \"Wins\": 7.0, \"Losses\": 2.0, \"Winrate\": 78.0, \"KDA\": 6.6, \"Avg BT\": \"3.6\", \"GT\": \"32:52:00\", \"CSM\": 7.9, \"DPM\": 678.0, \"GPM\": 402.0, \"CSD@15\": 0.6, \"GD@15\": 76.0, \"XPD@15\": -10.0}, {\"Champion\": \"\\u00a0Yone\", \"Picks\": 18, \"Bans\": 19, \"Presence\": 95.0, \"Wins\": 13.0, \"Losses\": 5.0, \"Winrate\": 72.0, \"KDA\": 4.4, \"Avg BT\": \"3.2\", \"GT\": \"32:14:00\", \"CSM\": 9.6, \"DPM\": 711.0, \"GPM\": 451.0, \"CSD@15\": 6.7, \"GD@15\": 434.0, \"XPD@15\": 372.0}, {\"Champion\": \"\\u00a0Rell\", \"Picks\": 26, \"Bans\": 5, \"Presence\": 79.0, \"Wins\": 15.0, \"Losses\": 11.0, \"Winrate\": 58.0, \"KDA\": 3.0, \"Avg BT\": \"8.8\", \"GT\": \"34:22:00\", \"CSM\": 1.0, \"DPM\": 144.0, \"GPM\": 247.0, \"CSD@15\": -0.5, \"GD@15\": 11.0, \"XPD@15\": -58.0}, {\"Champion\": \"\\u00a0Jax\", \"Picks\": 15, \"Bans\": 15, \"Presence\": 77.0, \"Wins\": 6.0, \"Losses\": 9.0, \"Winrate\": 40.0, \"KDA\": 2.6, \"Avg BT\": \"5\", \"GT\": \"35:00:00\", \"CSM\": 7.8, \"DPM\": 403.0, \"GPM\": 396.0, \"CSD@15\": -8.9, \"GD@15\": -128.0, \"XPD@15\": -201.0}, {\"Champion\": \"\\u00a0Skarner\", \"Picks\": 13, \"Bans\": 17, \"Presence\": 77.0, \"Wins\": 7.0, \"Losses\": 6.0, \"Winrate\": 54.0, \"KDA\": 3.9, \"Avg BT\": \"4\", \"GT\": \"31:48:00\", \"CSM\": 5.8, \"DPM\": 372.0, \"GPM\": 332.0, \"CSD@15\": 2.4, \"GD@15\": 77.0, \"XPD@15\": 77.0}, {\"Champion\": \"\\u00a0Ziggs\", \"Picks\": 5, \"Bans\": 24, \"Presence\": 74.0, \"Wins\": 2.0, \"Losses\": 3.0, \"Winrate\": 40.0, \"KDA\": 3.9, \"Avg BT\": \"4.5\", \"GT\": \"32:33:00\", \"CSM\": 9.7, \"DPM\": 735.0, \"GPM\": 451.0, \"CSD@15\": 15.0, \"GD@15\": 685.0, \"XPD@15\": 877.0}, {\"Champion\": \"\\u00a0Ashe\", \"Picks\": 5, \"Bans\": 23, \"Presence\": 72.0, \"Wins\": 3.0, \"Losses\": 2.0, \"Winrate\": 60.0, \"KDA\": 6.6, \"Avg BT\": \"6.4\", \"GT\": \"34:26:00\", \"CSM\": 9.7, \"DPM\": 654.0, \"GPM\": 457.0, \"CSD@15\": -1.6, \"GD@15\": 4.0, \"XPD@15\": 164.0}, {\"Champion\": \"\\u00a0Gnar\", \"Picks\": 17, \"Bans\": 11, \"Presence\": 72.0, \"Wins\": 11.0, \"Losses\": 6.0, \"Winrate\": 65.0, \"KDA\": 3.1, \"Avg BT\": \"4\", \"GT\": \"32:43:00\", \"CSM\": 8.0, \"DPM\": 520.0, \"GPM\": 402.0, \"CSD@15\": -6.6, \"GD@15\": -551.0, \"XPD@15\": -547.0}, {\"Champion\": \"\\u00a0Kaisa\", \"Picks\": 18, \"Bans\": 10, \"Presence\": 72.0, \"Wins\": 10.0, \"Losses\": 8.0, \"Winrate\": 56.0, \"KDA\": 5.9, \"Avg BT\": \"8.4\", \"GT\": \"33:01:00\", \"CSM\": 10.0, \"DPM\": 792.0, \"GPM\": 472.0, \"CSD@15\": -4.8, \"GD@15\": -344.0, \"XPD@15\": -86.0}, {\"Champion\": \"\\u00a0Poppy\", \"Picks\": 9, \"Bans\": 17, \"Presence\": 67.0, \"Wins\": 2.0, \"Losses\": 7.0, \"Winrate\": 22.0, \"KDA\": 1.9, \"Avg BT\": \"6.5\", \"GT\": \"35:25:00\", \"CSM\": 2.6, \"DPM\": 256.0, \"GPM\": 261.0, \"CSD@15\": 2.4, \"GD@15\": 61.0, \"XPD@15\": -20.0}, {\"Champion\": \"\\u00a0Kalista\", \"Picks\": 11, \"Bans\": 15, \"Presence\": 67.0, \"Wins\": 9.0, \"Losses\": 2.0, \"Winrate\": 82.0, \"KDA\": 5.5, \"Avg BT\": \"7.4\", \"GT\": \"34:39:00\", \"CSM\": 9.1, \"DPM\": 605.0, \"GPM\": 447.0, \"CSD@15\": -7.6, \"GD@15\": -218.0, \"XPD@15\": -504.0}, {\"Champion\": \"\\u00a0Vi\", \"Picks\": 15, \"Bans\": 9, \"Presence\": 62.0, \"Wins\": 7.0, \"Losses\": 8.0, \"Winrate\": 47.0, \"KDA\": 2.6, \"Avg BT\": \"4.3\", \"GT\": \"34:31:00\", \"CSM\": 6.1, \"DPM\": 295.0, \"GPM\": 345.0, \"CSD@15\": -3.0, \"GD@15\": -27.0, \"XPD@15\": 224.0}, {\"Champion\": \"\\u00a0Jhin\", \"Picks\": 14, \"Bans\": 9, \"Presence\": 59.0, \"Wins\": 5.0, \"Losses\": 9.0, \"Winrate\": 36.0, \"KDA\": 5.3, \"Avg BT\": \"8.2\", \"GT\": \"33:09:00\", \"CSM\": 9.6, \"DPM\": 593.0, \"GPM\": 419.0, \"CSD@15\": 4.9, \"GD@15\": 83.0, \"XPD@15\": 248.0}, {\"Champion\": \"\\u00a0Rumble\", \"Picks\": 10, \"Bans\": 12, \"Presence\": 56.0, \"Wins\": 6.0, \"Losses\": 4.0, \"Winrate\": 60.0, \"KDA\": 4.1, \"Avg BT\": \"3.5\", \"GT\": \"33:53:00\", \"CSM\": 7.6, \"DPM\": 679.0, \"GPM\": 388.0, \"CSD@15\": 3.4, \"GD@15\": 251.0, \"XPD@15\": 487.0}, {\"Champion\": \"\\u00a0Leona\", \"Picks\": 16, \"Bans\": 5, \"Presence\": 54.0, \"Wins\": 11.0, \"Losses\": 5.0, \"Winrate\": 69.0, \"KDA\": 2.8, \"Avg BT\": \"9.4\", \"GT\": \"34:05:00\", \"CSM\": 1.1, \"DPM\": 189.0, \"GPM\": 246.0, \"CSD@15\": -1.8, \"GD@15\": -225.0, \"XPD@15\": -60.0}, {\"Champion\": \"\\u00a0Sejuani\", \"Picks\": 15, \"Bans\": 6, \"Presence\": 54.0, \"Wins\": 7.0, \"Losses\": 8.0, \"Winrate\": 47.0, \"KDA\": 3.4, \"Avg BT\": \"5.3\", \"GT\": \"33:11:00\", \"CSM\": 5.5, \"DPM\": 302.0, \"GPM\": 318.0, \"CSD@15\": -4.1, \"GD@15\": -36.0, \"XPD@15\": -181.0}, {\"Champion\": \"\\u00a0Orianna\", \"Picks\": 9, \"Bans\": 11, \"Presence\": 51.0, \"Wins\": 3.0, \"Losses\": 6.0, \"Winrate\": 33.0, \"KDA\": 3.5, \"Avg BT\": \"2.5\", \"GT\": \"33:47:00\", \"CSM\": 8.1, \"DPM\": 587.0, \"GPM\": 382.0, \"CSD@15\": 8.1, \"GD@15\": -45.0, \"XPD@15\": 139.0}, {\"Champion\": \"\\u00a0Renekton\", \"Picks\": 7, \"Bans\": 13, \"Presence\": 51.0, \"Wins\": 3.0, \"Losses\": 4.0, \"Winrate\": 43.0, \"KDA\": 2.0, \"Avg BT\": \"4.1\", \"GT\": \"36:41:00\", \"CSM\": 8.1, \"DPM\": 381.0, \"GPM\": 386.0, \"CSD@15\": 10.1, \"GD@15\": 123.0, \"XPD@15\": 470.0}, {\"Champion\": \"\\u00a0Smolder\", \"Picks\": 12, \"Bans\": 7, \"Presence\": 49.0, \"Wins\": 3.0, \"Losses\": 9.0, \"Winrate\": 25.0, \"KDA\": 2.8, \"Avg BT\": \"6.1\", \"GT\": \"33:15:00\", \"CSM\": 9.7, \"DPM\": 801.0, \"GPM\": 428.0, \"CSD@15\": -6.2, \"GD@15\": -269.0, \"XPD@15\": -399.0}, {\"Champion\": \"\\u00a0Ahri\", \"Picks\": 12, \"Bans\": 4, \"Presence\": 41.0, \"Wins\": 7.0, \"Losses\": 5.0, \"Winrate\": 58.0, \"KDA\": 6.7, \"Avg BT\": \"5.5\", \"GT\": \"35:04:00\", \"CSM\": 8.6, \"DPM\": 699.0, \"GPM\": 429.0, \"CSD@15\": -0.8, \"GD@15\": 157.0, \"XPD@15\": 97.0}, {\"Champion\": \"\\u00a0Ezreal\", \"Picks\": 5, \"Bans\": 11, \"Presence\": 41.0, \"Wins\": 2.0, \"Losses\": 3.0, \"Winrate\": 40.0, \"KDA\": 4.3, \"Avg BT\": \"7.8\", \"GT\": \"34:58:00\", \"CSM\": 10.0, \"DPM\": 832.0, \"GPM\": 445.0, \"CSD@15\": 6.8, \"GD@15\": -44.0, \"XPD@15\": -297.0}, {\"Champion\": \"\\u00a0Renata Glasc\", \"Picks\": 6, \"Bans\": 10, \"Presence\": 41.0, \"Wins\": 3.0, \"Losses\": 3.0, \"Winrate\": 50.0, \"KDA\": 3.3, \"Avg BT\": \"7.1\", \"GT\": \"34:55:00\", \"CSM\": 1.2, \"DPM\": 194.0, \"GPM\": 252.0, \"CSD@15\": -1.8, \"GD@15\": 215.0, \"XPD@15\": 404.0}, {\"Champion\": \"\\u00a0Maokai\", \"Picks\": 8, \"Bans\": 6, \"Presence\": 36.0, \"Wins\": 5.0, \"Losses\": 3.0, \"Winrate\": 63.0, \"KDA\": 3.7, \"Avg BT\": \"6.3\", \"GT\": \"33:20:00\", \"CSM\": 5.1, \"DPM\": 284.0, \"GPM\": 311.0, \"CSD@15\": -8.5, \"GD@15\": -555.0, \"XPD@15\": -318.0}, {\"Champion\": \"\\u00a0Nocturne\", \"Picks\": 10, \"Bans\": 4, \"Presence\": 36.0, \"Wins\": 5.0, \"Losses\": 5.0, \"Winrate\": 50.0, \"KDA\": 4.5, \"Avg BT\": \"6\", \"GT\": \"32:51:00\", \"CSM\": 6.5, \"DPM\": 330.0, \"GPM\": 352.0, \"CSD@15\": 5.2, \"GD@15\": 76.0, \"XPD@15\": -52.0}, {\"Champion\": \"\\u00a0Lucian\", \"Picks\": 3, \"Bans\": 9, \"Presence\": 31.0, \"Wins\": 0.0, \"Losses\": 3.0, \"Winrate\": 0.0, \"KDA\": 2.2, \"Avg BT\": \"5.6\", \"GT\": \"40:23:00\", \"CSM\": 8.6, \"DPM\": 667.0, \"GPM\": 384.0, \"CSD@15\": 2.7, \"GD@15\": -266.0, \"XPD@15\": -17.0}, {\"Champion\": \"\\u00a0Xayah\", \"Picks\": 5, \"Bans\": 7, \"Presence\": 31.0, \"Wins\": 2.0, \"Losses\": 3.0, \"Winrate\": 40.0, \"KDA\": 2.8, \"Avg BT\": \"9\", \"GT\": \"32:39:00\", \"CSM\": 10.4, \"DPM\": 670.0, \"GPM\": 460.0, \"CSD@15\": -1.0, \"GD@15\": 305.0, \"XPD@15\": 17.0}, {\"Champion\": \"\\u00a0Rakan\", \"Picks\": 6, \"Bans\": 6, \"Presence\": 31.0, \"Wins\": 1.0, \"Losses\": 5.0, \"Winrate\": 17.0, \"KDA\": 3.1, \"Avg BT\": \"8.3\", \"GT\": \"30:42:00\", \"CSM\": 1.3, \"DPM\": 132.0, \"GPM\": 239.0, \"CSD@15\": -0.3, \"GD@15\": -101.0, \"XPD@15\": 199.0}, {\"Champion\": \"\\u00a0Alistar\", \"Picks\": 5, \"Bans\": 6, \"Presence\": 28.0, \"Wins\": 0.0, \"Losses\": 5.0, \"Winrate\": 0.0, \"KDA\": 1.2, \"Avg BT\": \"8.8\", \"GT\": \"32:13:00\", \"CSM\": 1.1, \"DPM\": 114.0, \"GPM\": 209.0, \"CSD@15\": 4.6, \"GD@15\": -116.0, \"XPD@15\": -13.0}, {\"Champion\": \"\\u00a0KSante\", \"Picks\": 6, \"Bans\": 5, \"Presence\": 28.0, \"Wins\": 2.0, \"Losses\": 4.0, \"Winrate\": 33.0, \"KDA\": 2.9, \"Avg BT\": \"6.8\", \"GT\": \"31:35:00\", \"CSM\": 7.1, \"DPM\": 359.0, \"GPM\": 361.0, \"CSD@15\": 0.2, \"GD@15\": 336.0, \"XPD@15\": 399.0}, {\"Champion\": \"\\u00a0Ivern\", \"Picks\": 3, \"Bans\": 7, \"Presence\": 26.0, \"Wins\": 2.0, \"Losses\": 1.0, \"Winrate\": 67.0, \"KDA\": 6.2, \"Avg BT\": \"2.7\", \"GT\": \"39:05:00\", \"CSM\": 5.9, \"DPM\": 176.0, \"GPM\": 341.0, \"CSD@15\": 0.3, \"GD@15\": 366.0, \"XPD@15\": -174.0}, {\"Champion\": \"\\u00a0Nautilus\", \"Picks\": 5, \"Bans\": 3, \"Presence\": 21.0, \"Wins\": 2.0, \"Losses\": 3.0, \"Winrate\": 40.0, \"KDA\": 1.6, \"Avg BT\": \"9\", \"GT\": \"29:08:00\", \"CSM\": 1.2, \"DPM\": 199.0, \"GPM\": 248.0, \"CSD@15\": 1.2, \"GD@15\": 33.0, \"XPD@15\": -501.0}, {\"Champion\": \"\\u00a0Akali\", \"Picks\": 5, \"Bans\": 2, \"Presence\": 18.0, \"Wins\": 0.0, \"Losses\": 5.0, \"Winrate\": 0.0, \"KDA\": 0.9, \"Avg BT\": \"3\", \"GT\": \"27:54:00\", \"CSM\": 8.2, \"DPM\": 444.0, \"GPM\": 352.0, \"CSD@15\": -7.0, \"GD@15\": -1107.0, \"XPD@15\": -351.0}, {\"Champion\": \"\\u00a0Braum\", \"Picks\": 4, \"Bans\": 3, \"Presence\": 18.0, \"Wins\": 4.0, \"Losses\": 0.0, \"Winrate\": 100.0, \"KDA\": 6.6, \"Avg BT\": \"6.7\", \"GT\": \"35:12:00\", \"CSM\": 1.1, \"DPM\": 189.0, \"GPM\": 263.0, \"CSD@15\": 2.8, \"GD@15\": 617.0, \"XPD@15\": 536.0}, {\"Champion\": \"\\u00a0Neeko\", \"Picks\": 5, \"Bans\": 2, \"Presence\": 18.0, \"Wins\": 2.0, \"Losses\": 3.0, \"Winrate\": 40.0, \"KDA\": 3.2, \"Avg BT\": \"6\", \"GT\": \"30:45:00\", \"CSM\": 5.3, \"DPM\": 494.0, \"GPM\": 336.0, \"CSD@15\": 10.0, \"GD@15\": 693.0, \"XPD@15\": 568.0}, {\"Champion\": \"\\u00a0Tristana\", \"Picks\": 3, \"Bans\": 3, \"Presence\": 15.0, \"Wins\": 1.0, \"Losses\": 2.0, \"Winrate\": 33.0, \"KDA\": 3.5, \"Avg BT\": \"7.7\", \"GT\": \"32:16:00\", \"CSM\": 8.9, \"DPM\": 639.0, \"GPM\": 430.0, \"CSD@15\": -10.7, \"GD@15\": -434.0, \"XPD@15\": -508.0}, {\"Champion\": \"\\u00a0Brand\", \"Picks\": 1, \"Bans\": 4, \"Presence\": 13.0, \"Wins\": 1.0, \"Losses\": 0.0, \"Winrate\": 100.0, \"KDA\": 8.0, \"Avg BT\": \"4\", \"GT\": \"33:28:00\", \"CSM\": 7.7, \"DPM\": 845.0, \"GPM\": 430.0, \"CSD@15\": 30.0, \"GD@15\": 1976.0, \"XPD@15\": 1292.0}, {\"Champion\": \"\\u00a0LeBlanc\", \"Picks\": 1, \"Bans\": 4, \"Presence\": 13.0, \"Wins\": 1.0, \"Losses\": 0.0, \"Winrate\": 100.0, \"KDA\": 14.0, \"Avg BT\": \"5.3\", \"GT\": \"35:36:00\", \"CSM\": 8.4, \"DPM\": 1058.0, \"GPM\": 434.0, \"CSD@15\": 12.0, \"GD@15\": 120.0, \"XPD@15\": 570.0}, {\"Champion\": \"\\u00a0Miss Fortune\", \"Picks\": 4, \"Bans\": 1, \"Presence\": 13.0, \"Wins\": 3.0, \"Losses\": 1.0, \"Winrate\": 75.0, \"KDA\": 5.9, \"Avg BT\": \"10\", \"GT\": \"34:29:00\", \"CSM\": 9.7, \"DPM\": 885.0, \"GPM\": 487.0, \"CSD@15\": 4.2, \"GD@15\": 507.0, \"XPD@15\": 102.0}, {\"Champion\": \"\\u00a0Syndra\", \"Picks\": 3, \"Bans\": 2, \"Presence\": 13.0, \"Wins\": 0.0, \"Losses\": 3.0, \"Winrate\": 0.0, \"KDA\": 2.1, \"Avg BT\": \"8\", \"GT\": \"34:06:00\", \"CSM\": 7.6, \"DPM\": 554.0, \"GPM\": 380.0, \"CSD@15\": -5.3, \"GD@15\": -533.0, \"XPD@15\": -424.0}, {\"Champion\": \"\\u00a0Wukong\", \"Picks\": 4, \"Bans\": 1, \"Presence\": 13.0, \"Wins\": 2.0, \"Losses\": 2.0, \"Winrate\": 50.0, \"KDA\": 3.3, \"Avg BT\": \"5\", \"GT\": \"32:14:00\", \"CSM\": 5.9, \"DPM\": 392.0, \"GPM\": 352.0, \"CSD@15\": 0.5, \"GD@15\": 376.0, \"XPD@15\": -42.0}, {\"Champion\": \"\\u00a0Zyra\", \"Picks\": 3, \"Bans\": 2, \"Presence\": 13.0, \"Wins\": 0.0, \"Losses\": 3.0, \"Winrate\": 0.0, \"KDA\": 2.4, \"Avg BT\": \"5\", \"GT\": \"35:29:00\", \"CSM\": 6.8, \"DPM\": 656.0, \"GPM\": 358.0, \"CSD@15\": 22.7, \"GD@15\": 437.0, \"XPD@15\": 773.0}, {\"Champion\": \"\\u00a0Sylas\", \"Picks\": 4, \"Bans\": 1, \"Presence\": 13.0, \"Wins\": 4.0, \"Losses\": 0.0, \"Winrate\": 100.0, \"KDA\": 4.9, \"Avg BT\": \"8\", \"GT\": \"33:47:00\", \"CSM\": 8.5, \"DPM\": 548.0, \"GPM\": 437.0, \"CSD@15\": -7.5, \"GD@15\": 188.0, \"XPD@15\": -145.0}, {\"Champion\": \"\\u00a0Cassiopeia\", \"Picks\": 3, \"Bans\": 1, \"Presence\": 10.0, \"Wins\": 1.0, \"Losses\": 2.0, \"Winrate\": 33.0, \"KDA\": 2.4, \"Avg BT\": \"3\", \"GT\": \"36:09:00\", \"CSM\": 8.7, \"DPM\": 467.0, \"GPM\": 378.0, \"CSD@15\": -1.0, \"GD@15\": -573.0, \"XPD@15\": -462.0}, {\"Champion\": \"\\u00a0Olaf\", \"Picks\": 3, \"Bans\": 1, \"Presence\": 10.0, \"Wins\": 1.0, \"Losses\": 2.0, \"Winrate\": 33.0, \"KDA\": 1.6, \"Avg BT\": \"8\", \"GT\": \"33:13:00\", \"CSM\": 7.8, \"DPM\": 621.0, \"GPM\": 393.0, \"CSD@15\": -20.7, \"GD@15\": -861.0, \"XPD@15\": -986.0}, {\"Champion\": \"\\u00a0Amumu\", \"Picks\": 2, \"Bans\": 1, \"Presence\": 8.0, \"Wins\": 0.0, \"Losses\": 2.0, \"Winrate\": 0.0, \"KDA\": 2.2, \"Avg BT\": \"8\", \"GT\": \"33:27:00\", \"CSM\": 6.2, \"DPM\": 525.0, \"GPM\": 327.0, \"CSD@15\": 23.5, \"GD@15\": -110.0, \"XPD@15\": 597.0}, {\"Champion\": \"\\u00a0Draven\", \"Picks\": 2, \"Bans\": 1, \"Presence\": 8.0, \"Wins\": 1.0, \"Losses\": 1.0, \"Winrate\": 50.0, \"KDA\": 2.5, \"Avg BT\": \"9\", \"GT\": \"26:36:00\", \"CSM\": 9.1, \"DPM\": 573.0, \"GPM\": 512.0, \"CSD@15\": -11.0, \"GD@15\": 1220.0, \"XPD@15\": -90.0}, {\"Champion\": \"\\u00a0Galio\", \"Picks\": 3, \"Bans\": 0, \"Presence\": 8.0, \"Wins\": 2.0, \"Losses\": 1.0, \"Winrate\": 67.0, \"KDA\": 4.6, \"Avg BT\": \"-\", \"GT\": \"35:48:00\", \"CSM\": 7.4, \"DPM\": 477.0, \"GPM\": 370.0, \"CSD@15\": 2.7, \"GD@15\": 662.0, \"XPD@15\": 235.0}, {\"Champion\": \"\\u00a0Varus\", \"Picks\": 3, \"Bans\": 0, \"Presence\": 8.0, \"Wins\": 0.0, \"Losses\": 3.0, \"Winrate\": 0.0, \"KDA\": 1.6, \"Avg BT\": \"-\", \"GT\": \"36:25:00\", \"CSM\": 9.2, \"DPM\": 439.0, \"GPM\": 403.0, \"CSD@15\": 2.7, \"GD@15\": -278.0, \"XPD@15\": -398.0}, {\"Champion\": \"\\u00a0Yasuo\", \"Picks\": 2, \"Bans\": 1, \"Presence\": 8.0, \"Wins\": 1.0, \"Losses\": 1.0, \"Winrate\": 50.0, \"KDA\": 3.1, \"Avg BT\": \"7\", \"GT\": \"35:36:00\", \"CSM\": 8.4, \"DPM\": 423.0, \"GPM\": 419.0, \"CSD@15\": 2.0, \"GD@15\": 408.0, \"XPD@15\": 632.0}, {\"Champion\": \"\\u00a0Jarvan IV\", \"Picks\": 1, \"Bans\": 1, \"Presence\": 5.0, \"Wins\": 1.0, \"Losses\": 0.0, \"Winrate\": 100.0, \"KDA\": 6.3, \"Avg BT\": \"5\", \"GT\": \"33:07:00\", \"CSM\": 6.2, \"DPM\": 397.0, \"GPM\": 411.0, \"CSD@15\": -28.0, \"GD@15\": -563.0, \"XPD@15\": -964.0}, {\"Champion\": \"\\u00a0Jinx\", \"Picks\": 1, \"Bans\": 1, \"Presence\": 5.0, \"Wins\": 0.0, \"Losses\": 1.0, \"Winrate\": 0.0, \"KDA\": 4.5, \"Avg BT\": \"3\", \"GT\": \"45:13:00\", \"CSM\": 10.1, \"DPM\": 685.0, \"GPM\": 422.0, \"CSD@15\": 19.0, \"GD@15\": 315.0, \"XPD@15\": 1046.0}, {\"Champion\": \"\\u00a0Kennen\", \"Picks\": 2, \"Bans\": 0, \"Presence\": 5.0, \"Wins\": 1.0, \"Losses\": 1.0, \"Winrate\": 50.0, \"KDA\": 4.8, \"Avg BT\": \"-\", \"GT\": \"38:42:00\", \"CSM\": 8.0, \"DPM\": 719.0, \"GPM\": 390.0, \"CSD@15\": 11.5, \"GD@15\": -14.0, \"XPD@15\": -280.0}, {\"Champion\": \"\\u00a0Nami\", \"Picks\": 1, \"Bans\": 1, \"Presence\": 5.0, \"Wins\": 0.0, \"Losses\": 1.0, \"Winrate\": 0.0, \"KDA\": 12.0, \"Avg BT\": \"8\", \"GT\": \"42:14:00\", \"CSM\": 1.1, \"DPM\": 259.0, \"GPM\": 217.0, \"CSD@15\": 3.0, \"GD@15\": 116.0, \"XPD@15\": 20.0}, {\"Champion\": \"\\u00a0Sion\", \"Picks\": 2, \"Bans\": 0, \"Presence\": 5.0, \"Wins\": 1.0, \"Losses\": 1.0, \"Winrate\": 50.0, \"KDA\": 1.4, \"Avg BT\": \"-\", \"GT\": \"29:11:00\", \"CSM\": 8.2, \"DPM\": 377.0, \"GPM\": 348.0, \"CSD@15\": 25.5, \"GD@15\": 789.0, \"XPD@15\": 272.0}, {\"Champion\": \"\\u00a0Darius\", \"Picks\": 1, \"Bans\": 0, \"Presence\": 3.0, \"Wins\": 0.0, \"Losses\": 1.0, \"Winrate\": 0.0, \"KDA\": 1.3, \"Avg BT\": \"-\", \"GT\": \"33:28:00\", \"CSM\": 7.6, \"DPM\": 414.0, \"GPM\": 348.0, \"CSD@15\": -15.0, \"GD@15\": -952.0, \"XPD@15\": -1226.0}, {\"Champion\": \"\\u00a0Gragas\", \"Picks\": 1, \"Bans\": 0, \"Presence\": 3.0, \"Wins\": 1.0, \"Losses\": 0.0, \"Winrate\": 100.0, \"KDA\": 14.0, \"Avg BT\": \"-\", \"GT\": \"28:08:00\", \"CSM\": 8.0, \"DPM\": 500.0, \"GPM\": 428.0, \"CSD@15\": 3.0, \"GD@15\": 477.0, \"XPD@15\": 355.0}, {\"Champion\": \"\\u00a0Jayce\", \"Picks\": 1, \"Bans\": 0, \"Presence\": 3.0, \"Wins\": 1.0, \"Losses\": 0.0, \"Winrate\": 100.0, \"KDA\": 7.0, \"Avg BT\": \"-\", \"GT\": \"28:09:00\", \"CSM\": 8.2, \"DPM\": 1063.0, \"GPM\": 478.0, \"CSD@15\": 27.0, \"GD@15\": 1544.0, \"XPD@15\": 1302.0}, {\"Champion\": \"\\u00a0Nunu\", \"Picks\": 1, \"Bans\": 0, \"Presence\": 3.0, \"Wins\": 1.0, \"Losses\": 0.0, \"Winrate\": 100.0, \"KDA\": 21.0, \"Avg BT\": \"-\", \"GT\": \"37:44:00\", \"CSM\": 6.8, \"DPM\": 398.0, \"GPM\": 403.0, \"CSD@15\": -24.0, \"GD@15\": -1259.0, \"XPD@15\": -1260.0}, {\"Champion\": \"\\u00a0Twitch\", \"Picks\": 1, \"Bans\": 0, \"Presence\": 3.0, \"Wins\": 1.0, \"Losses\": 0.0, \"Winrate\": 100.0, \"KDA\": 17.0, \"Avg BT\": \"-\", \"GT\": \"33:11:00\", \"CSM\": 9.8, \"DPM\": 940.0, \"GPM\": 498.0, \"CSD@15\": -15.0, \"GD@15\": 323.0, \"XPD@15\": 57.0}, {\"Champion\": \"\\u00a0Urgot\", \"Picks\": 1, \"Bans\": 0, \"Presence\": 3.0, \"Wins\": 0.0, \"Losses\": 1.0, \"Winrate\": 0.0, \"KDA\": 2.3, \"Avg BT\": \"-\", \"GT\": \"33:26:00\", \"CSM\": 10.2, \"DPM\": 640.0, \"GPM\": 474.0, \"CSD@15\": 20.0, \"GD@15\": 445.0, \"XPD@15\": 613.0}, {\"Champion\": \"\\u00a0Xin Zhao\", \"Picks\": 1, \"Bans\": 0, \"Presence\": 3.0, \"Wins\": 1.0, \"Losses\": 0.0, \"Winrate\": 100.0, \"KDA\": 11.0, \"Avg BT\": \"-\", \"GT\": \"32:48:00\", \"CSM\": 7.2, \"DPM\": 341.0, \"GPM\": 383.0, \"CSD@15\": 2.0, \"GD@15\": 647.0, \"XPD@15\": 14.0}, {\"Champion\": \"\\u00a0Camille\", \"Picks\": 1, \"Bans\": 0, \"Presence\": 3.0, \"Wins\": 1.0, \"Losses\": 0.0, \"Winrate\": 100.0, \"KDA\": 6.5, \"Avg BT\": \"-\", \"GT\": \"39:50:00\", \"CSM\": 8.8, \"DPM\": 554.0, \"GPM\": 466.0, \"CSD@15\": 15.0, \"GD@15\": 821.0, \"XPD@15\": 448.0}, {\"Champion\": \"\\u00a0Lillia\", \"Picks\": 1, \"Bans\": 0, \"Presence\": 3.0, \"Wins\": 0.0, \"Losses\": 1.0, \"Winrate\": 0.0, \"KDA\": 4.0, \"Avg BT\": \"-\", \"GT\": \"45:40:00\", \"CSM\": 6.7, \"DPM\": 386.0, \"GPM\": 347.0, \"CSD@15\": -7.0, \"GD@15\": -865.0, \"XPD@15\": -495.0}, {\"Champion\": \"\\u00a0Hwei\", \"Picks\": 1, \"Bans\": 0, \"Presence\": 3.0, \"Wins\": 1.0, \"Losses\": 0.0, \"Winrate\": 100.0, \"KDA\": 19.0, \"Avg BT\": \"-\", \"GT\": \"37:44:00\", \"CSM\": 7.2, \"DPM\": 778.0, \"GPM\": 442.0, \"CSD@15\": -11.0, \"GD@15\": -26.0, \"XPD@15\": -727.0}]}}, {\"mode\": \"vega-lite\"});\n",
              "</script>"
            ],
            "text/plain": [
              "alt.Chart(...)"
            ]
          },
          "metadata": {},
          "execution_count": 13
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "alt.Chart(df).mark_boxplot().encode(\n",
        "    x='Picks',\n",
        ")\n",
        "#boîte à moustache des picks."
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 83
        },
        "id": "b8th-gJb3dJu",
        "outputId": "5adcf033-0b0d-45f4-840a-064ef7d18f9c"
      },
      "execution_count": 14,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "\n",
              "<style>\n",
              "  #altair-viz-a6e65ed3125a43e09aaf5371b3eaebdb.vega-embed {\n",
              "    width: 100%;\n",
              "    display: flex;\n",
              "  }\n",
              "\n",
              "  #altair-viz-a6e65ed3125a43e09aaf5371b3eaebdb.vega-embed details,\n",
              "  #altair-viz-a6e65ed3125a43e09aaf5371b3eaebdb.vega-embed details summary {\n",
              "    position: relative;\n",
              "  }\n",
              "</style>\n",
              "<div id=\"altair-viz-a6e65ed3125a43e09aaf5371b3eaebdb\"></div>\n",
              "<script type=\"text/javascript\">\n",
              "  var VEGA_DEBUG = (typeof VEGA_DEBUG == \"undefined\") ? {} : VEGA_DEBUG;\n",
              "  (function(spec, embedOpt){\n",
              "    let outputDiv = document.currentScript.previousElementSibling;\n",
              "    if (outputDiv.id !== \"altair-viz-a6e65ed3125a43e09aaf5371b3eaebdb\") {\n",
              "      outputDiv = document.getElementById(\"altair-viz-a6e65ed3125a43e09aaf5371b3eaebdb\");\n",
              "    }\n",
              "\n",
              "    const paths = {\n",
              "      \"vega\": \"https://cdn.jsdelivr.net/npm/vega@5?noext\",\n",
              "      \"vega-lib\": \"https://cdn.jsdelivr.net/npm/vega-lib?noext\",\n",
              "      \"vega-lite\": \"https://cdn.jsdelivr.net/npm/vega-lite@5.20.1?noext\",\n",
              "      \"vega-embed\": \"https://cdn.jsdelivr.net/npm/vega-embed@6?noext\",\n",
              "    };\n",
              "\n",
              "    function maybeLoadScript(lib, version) {\n",
              "      var key = `${lib.replace(\"-\", \"\")}_version`;\n",
              "      return (VEGA_DEBUG[key] == version) ?\n",
              "        Promise.resolve(paths[lib]) :\n",
              "        new Promise(function(resolve, reject) {\n",
              "          var s = document.createElement('script');\n",
              "          document.getElementsByTagName(\"head\")[0].appendChild(s);\n",
              "          s.async = true;\n",
              "          s.onload = () => {\n",
              "            VEGA_DEBUG[key] = version;\n",
              "            return resolve(paths[lib]);\n",
              "          };\n",
              "          s.onerror = () => reject(`Error loading script: ${paths[lib]}`);\n",
              "          s.src = paths[lib];\n",
              "        });\n",
              "    }\n",
              "\n",
              "    function showError(err) {\n",
              "      outputDiv.innerHTML = `<div class=\"error\" style=\"color:red;\">${err}</div>`;\n",
              "      throw err;\n",
              "    }\n",
              "\n",
              "    function displayChart(vegaEmbed) {\n",
              "      vegaEmbed(outputDiv, spec, embedOpt)\n",
              "        .catch(err => showError(`Javascript Error: ${err.message}<br>This usually means there's a typo in your chart specification. See the javascript console for the full traceback.`));\n",
              "    }\n",
              "\n",
              "    if(typeof define === \"function\" && define.amd) {\n",
              "      requirejs.config({paths});\n",
              "      let deps = [\"vega-embed\"];\n",
              "      require(deps, displayChart, err => showError(`Error loading script: ${err.message}`));\n",
              "    } else {\n",
              "      maybeLoadScript(\"vega\", \"5\")\n",
              "        .then(() => maybeLoadScript(\"vega-lite\", \"5.20.1\"))\n",
              "        .then(() => maybeLoadScript(\"vega-embed\", \"6\"))\n",
              "        .catch(showError)\n",
              "        .then(() => displayChart(vegaEmbed));\n",
              "    }\n",
              "  })({\"config\": {\"view\": {\"continuousWidth\": 300, \"continuousHeight\": 300}}, \"data\": {\"name\": \"data-2145461d1fecb32c28af25c426a6cced\"}, \"mark\": {\"type\": \"boxplot\"}, \"encoding\": {\"x\": {\"field\": \"Picks\", \"type\": \"quantitative\"}}, \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.20.1.json\", \"datasets\": {\"data-2145461d1fecb32c28af25c426a6cced\": [{\"Champion\": \"\\u00a0Aurora\", \"Picks\": 9, \"Bans\": 30, \"Presence\": 100.0, \"Wins\": 7.0, \"Losses\": 2.0, \"Winrate\": 78.0, \"KDA\": 6.6, \"Avg BT\": \"3.6\", \"GT\": \"32:52:00\", \"CSM\": 7.9, \"DPM\": 678.0, \"GPM\": 402.0, \"CSD@15\": 0.6, \"GD@15\": 76.0, \"XPD@15\": -10.0}, {\"Champion\": \"\\u00a0Yone\", \"Picks\": 18, \"Bans\": 19, \"Presence\": 95.0, \"Wins\": 13.0, \"Losses\": 5.0, \"Winrate\": 72.0, \"KDA\": 4.4, \"Avg BT\": \"3.2\", \"GT\": \"32:14:00\", \"CSM\": 9.6, \"DPM\": 711.0, \"GPM\": 451.0, \"CSD@15\": 6.7, \"GD@15\": 434.0, \"XPD@15\": 372.0}, {\"Champion\": \"\\u00a0Rell\", \"Picks\": 26, \"Bans\": 5, \"Presence\": 79.0, \"Wins\": 15.0, \"Losses\": 11.0, \"Winrate\": 58.0, \"KDA\": 3.0, \"Avg BT\": \"8.8\", \"GT\": \"34:22:00\", \"CSM\": 1.0, \"DPM\": 144.0, \"GPM\": 247.0, \"CSD@15\": -0.5, \"GD@15\": 11.0, \"XPD@15\": -58.0}, {\"Champion\": \"\\u00a0Jax\", \"Picks\": 15, \"Bans\": 15, \"Presence\": 77.0, \"Wins\": 6.0, \"Losses\": 9.0, \"Winrate\": 40.0, \"KDA\": 2.6, \"Avg BT\": \"5\", \"GT\": \"35:00:00\", \"CSM\": 7.8, \"DPM\": 403.0, \"GPM\": 396.0, \"CSD@15\": -8.9, \"GD@15\": -128.0, \"XPD@15\": -201.0}, {\"Champion\": \"\\u00a0Skarner\", \"Picks\": 13, \"Bans\": 17, \"Presence\": 77.0, \"Wins\": 7.0, \"Losses\": 6.0, \"Winrate\": 54.0, \"KDA\": 3.9, \"Avg BT\": \"4\", \"GT\": \"31:48:00\", \"CSM\": 5.8, \"DPM\": 372.0, \"GPM\": 332.0, \"CSD@15\": 2.4, \"GD@15\": 77.0, \"XPD@15\": 77.0}, {\"Champion\": \"\\u00a0Ziggs\", \"Picks\": 5, \"Bans\": 24, \"Presence\": 74.0, \"Wins\": 2.0, \"Losses\": 3.0, \"Winrate\": 40.0, \"KDA\": 3.9, \"Avg BT\": \"4.5\", \"GT\": \"32:33:00\", \"CSM\": 9.7, \"DPM\": 735.0, \"GPM\": 451.0, \"CSD@15\": 15.0, \"GD@15\": 685.0, \"XPD@15\": 877.0}, {\"Champion\": \"\\u00a0Ashe\", \"Picks\": 5, \"Bans\": 23, \"Presence\": 72.0, \"Wins\": 3.0, \"Losses\": 2.0, \"Winrate\": 60.0, \"KDA\": 6.6, \"Avg BT\": \"6.4\", \"GT\": \"34:26:00\", \"CSM\": 9.7, \"DPM\": 654.0, \"GPM\": 457.0, \"CSD@15\": -1.6, \"GD@15\": 4.0, \"XPD@15\": 164.0}, {\"Champion\": \"\\u00a0Gnar\", \"Picks\": 17, \"Bans\": 11, \"Presence\": 72.0, \"Wins\": 11.0, \"Losses\": 6.0, \"Winrate\": 65.0, \"KDA\": 3.1, \"Avg BT\": \"4\", \"GT\": \"32:43:00\", \"CSM\": 8.0, \"DPM\": 520.0, \"GPM\": 402.0, \"CSD@15\": -6.6, \"GD@15\": -551.0, \"XPD@15\": -547.0}, {\"Champion\": \"\\u00a0Kaisa\", \"Picks\": 18, \"Bans\": 10, \"Presence\": 72.0, \"Wins\": 10.0, \"Losses\": 8.0, \"Winrate\": 56.0, \"KDA\": 5.9, \"Avg BT\": \"8.4\", \"GT\": \"33:01:00\", \"CSM\": 10.0, \"DPM\": 792.0, \"GPM\": 472.0, \"CSD@15\": -4.8, \"GD@15\": -344.0, \"XPD@15\": -86.0}, {\"Champion\": \"\\u00a0Poppy\", \"Picks\": 9, \"Bans\": 17, \"Presence\": 67.0, \"Wins\": 2.0, \"Losses\": 7.0, \"Winrate\": 22.0, \"KDA\": 1.9, \"Avg BT\": \"6.5\", \"GT\": \"35:25:00\", \"CSM\": 2.6, \"DPM\": 256.0, \"GPM\": 261.0, \"CSD@15\": 2.4, \"GD@15\": 61.0, \"XPD@15\": -20.0}, {\"Champion\": \"\\u00a0Kalista\", \"Picks\": 11, \"Bans\": 15, \"Presence\": 67.0, \"Wins\": 9.0, \"Losses\": 2.0, \"Winrate\": 82.0, \"KDA\": 5.5, \"Avg BT\": \"7.4\", \"GT\": \"34:39:00\", \"CSM\": 9.1, \"DPM\": 605.0, \"GPM\": 447.0, \"CSD@15\": -7.6, \"GD@15\": -218.0, \"XPD@15\": -504.0}, {\"Champion\": \"\\u00a0Vi\", \"Picks\": 15, \"Bans\": 9, \"Presence\": 62.0, \"Wins\": 7.0, \"Losses\": 8.0, \"Winrate\": 47.0, \"KDA\": 2.6, \"Avg BT\": \"4.3\", \"GT\": \"34:31:00\", \"CSM\": 6.1, \"DPM\": 295.0, \"GPM\": 345.0, \"CSD@15\": -3.0, \"GD@15\": -27.0, \"XPD@15\": 224.0}, {\"Champion\": \"\\u00a0Jhin\", \"Picks\": 14, \"Bans\": 9, \"Presence\": 59.0, \"Wins\": 5.0, \"Losses\": 9.0, \"Winrate\": 36.0, \"KDA\": 5.3, \"Avg BT\": \"8.2\", \"GT\": \"33:09:00\", \"CSM\": 9.6, \"DPM\": 593.0, \"GPM\": 419.0, \"CSD@15\": 4.9, \"GD@15\": 83.0, \"XPD@15\": 248.0}, {\"Champion\": \"\\u00a0Rumble\", \"Picks\": 10, \"Bans\": 12, \"Presence\": 56.0, \"Wins\": 6.0, \"Losses\": 4.0, \"Winrate\": 60.0, \"KDA\": 4.1, \"Avg BT\": \"3.5\", \"GT\": \"33:53:00\", \"CSM\": 7.6, \"DPM\": 679.0, \"GPM\": 388.0, \"CSD@15\": 3.4, \"GD@15\": 251.0, \"XPD@15\": 487.0}, {\"Champion\": \"\\u00a0Leona\", \"Picks\": 16, \"Bans\": 5, \"Presence\": 54.0, \"Wins\": 11.0, \"Losses\": 5.0, \"Winrate\": 69.0, \"KDA\": 2.8, \"Avg BT\": \"9.4\", \"GT\": \"34:05:00\", \"CSM\": 1.1, \"DPM\": 189.0, \"GPM\": 246.0, \"CSD@15\": -1.8, \"GD@15\": -225.0, \"XPD@15\": -60.0}, {\"Champion\": \"\\u00a0Sejuani\", \"Picks\": 15, \"Bans\": 6, \"Presence\": 54.0, \"Wins\": 7.0, \"Losses\": 8.0, \"Winrate\": 47.0, \"KDA\": 3.4, \"Avg BT\": \"5.3\", \"GT\": \"33:11:00\", \"CSM\": 5.5, \"DPM\": 302.0, \"GPM\": 318.0, \"CSD@15\": -4.1, \"GD@15\": -36.0, \"XPD@15\": -181.0}, {\"Champion\": \"\\u00a0Orianna\", \"Picks\": 9, \"Bans\": 11, \"Presence\": 51.0, \"Wins\": 3.0, \"Losses\": 6.0, \"Winrate\": 33.0, \"KDA\": 3.5, \"Avg BT\": \"2.5\", \"GT\": \"33:47:00\", \"CSM\": 8.1, \"DPM\": 587.0, \"GPM\": 382.0, \"CSD@15\": 8.1, \"GD@15\": -45.0, \"XPD@15\": 139.0}, {\"Champion\": \"\\u00a0Renekton\", \"Picks\": 7, \"Bans\": 13, \"Presence\": 51.0, \"Wins\": 3.0, \"Losses\": 4.0, \"Winrate\": 43.0, \"KDA\": 2.0, \"Avg BT\": \"4.1\", \"GT\": \"36:41:00\", \"CSM\": 8.1, \"DPM\": 381.0, \"GPM\": 386.0, \"CSD@15\": 10.1, \"GD@15\": 123.0, \"XPD@15\": 470.0}, {\"Champion\": \"\\u00a0Smolder\", \"Picks\": 12, \"Bans\": 7, \"Presence\": 49.0, \"Wins\": 3.0, \"Losses\": 9.0, \"Winrate\": 25.0, \"KDA\": 2.8, \"Avg BT\": \"6.1\", \"GT\": \"33:15:00\", \"CSM\": 9.7, \"DPM\": 801.0, \"GPM\": 428.0, \"CSD@15\": -6.2, \"GD@15\": -269.0, \"XPD@15\": -399.0}, {\"Champion\": \"\\u00a0Ahri\", \"Picks\": 12, \"Bans\": 4, \"Presence\": 41.0, \"Wins\": 7.0, \"Losses\": 5.0, \"Winrate\": 58.0, \"KDA\": 6.7, \"Avg BT\": \"5.5\", \"GT\": \"35:04:00\", \"CSM\": 8.6, \"DPM\": 699.0, \"GPM\": 429.0, \"CSD@15\": -0.8, \"GD@15\": 157.0, \"XPD@15\": 97.0}, {\"Champion\": \"\\u00a0Ezreal\", \"Picks\": 5, \"Bans\": 11, \"Presence\": 41.0, \"Wins\": 2.0, \"Losses\": 3.0, \"Winrate\": 40.0, \"KDA\": 4.3, \"Avg BT\": \"7.8\", \"GT\": \"34:58:00\", \"CSM\": 10.0, \"DPM\": 832.0, \"GPM\": 445.0, \"CSD@15\": 6.8, \"GD@15\": -44.0, \"XPD@15\": -297.0}, {\"Champion\": \"\\u00a0Renata Glasc\", \"Picks\": 6, \"Bans\": 10, \"Presence\": 41.0, \"Wins\": 3.0, \"Losses\": 3.0, \"Winrate\": 50.0, \"KDA\": 3.3, \"Avg BT\": \"7.1\", \"GT\": \"34:55:00\", \"CSM\": 1.2, \"DPM\": 194.0, \"GPM\": 252.0, \"CSD@15\": -1.8, \"GD@15\": 215.0, \"XPD@15\": 404.0}, {\"Champion\": \"\\u00a0Maokai\", \"Picks\": 8, \"Bans\": 6, \"Presence\": 36.0, \"Wins\": 5.0, \"Losses\": 3.0, \"Winrate\": 63.0, \"KDA\": 3.7, \"Avg BT\": \"6.3\", \"GT\": \"33:20:00\", \"CSM\": 5.1, \"DPM\": 284.0, \"GPM\": 311.0, \"CSD@15\": -8.5, \"GD@15\": -555.0, \"XPD@15\": -318.0}, {\"Champion\": \"\\u00a0Nocturne\", \"Picks\": 10, \"Bans\": 4, \"Presence\": 36.0, \"Wins\": 5.0, \"Losses\": 5.0, \"Winrate\": 50.0, \"KDA\": 4.5, \"Avg BT\": \"6\", \"GT\": \"32:51:00\", \"CSM\": 6.5, \"DPM\": 330.0, \"GPM\": 352.0, \"CSD@15\": 5.2, \"GD@15\": 76.0, \"XPD@15\": -52.0}, {\"Champion\": \"\\u00a0Lucian\", \"Picks\": 3, \"Bans\": 9, \"Presence\": 31.0, \"Wins\": 0.0, \"Losses\": 3.0, \"Winrate\": 0.0, \"KDA\": 2.2, \"Avg BT\": \"5.6\", \"GT\": \"40:23:00\", \"CSM\": 8.6, \"DPM\": 667.0, \"GPM\": 384.0, \"CSD@15\": 2.7, \"GD@15\": -266.0, \"XPD@15\": -17.0}, {\"Champion\": \"\\u00a0Xayah\", \"Picks\": 5, \"Bans\": 7, \"Presence\": 31.0, \"Wins\": 2.0, \"Losses\": 3.0, \"Winrate\": 40.0, \"KDA\": 2.8, \"Avg BT\": \"9\", \"GT\": \"32:39:00\", \"CSM\": 10.4, \"DPM\": 670.0, \"GPM\": 460.0, \"CSD@15\": -1.0, \"GD@15\": 305.0, \"XPD@15\": 17.0}, {\"Champion\": \"\\u00a0Rakan\", \"Picks\": 6, \"Bans\": 6, \"Presence\": 31.0, \"Wins\": 1.0, \"Losses\": 5.0, \"Winrate\": 17.0, \"KDA\": 3.1, \"Avg BT\": \"8.3\", \"GT\": \"30:42:00\", \"CSM\": 1.3, \"DPM\": 132.0, \"GPM\": 239.0, \"CSD@15\": -0.3, \"GD@15\": -101.0, \"XPD@15\": 199.0}, {\"Champion\": \"\\u00a0Alistar\", \"Picks\": 5, \"Bans\": 6, \"Presence\": 28.0, \"Wins\": 0.0, \"Losses\": 5.0, \"Winrate\": 0.0, \"KDA\": 1.2, \"Avg BT\": \"8.8\", \"GT\": \"32:13:00\", \"CSM\": 1.1, \"DPM\": 114.0, \"GPM\": 209.0, \"CSD@15\": 4.6, \"GD@15\": -116.0, \"XPD@15\": -13.0}, {\"Champion\": \"\\u00a0KSante\", \"Picks\": 6, \"Bans\": 5, \"Presence\": 28.0, \"Wins\": 2.0, \"Losses\": 4.0, \"Winrate\": 33.0, \"KDA\": 2.9, \"Avg BT\": \"6.8\", \"GT\": \"31:35:00\", \"CSM\": 7.1, \"DPM\": 359.0, \"GPM\": 361.0, \"CSD@15\": 0.2, \"GD@15\": 336.0, \"XPD@15\": 399.0}, {\"Champion\": \"\\u00a0Ivern\", \"Picks\": 3, \"Bans\": 7, \"Presence\": 26.0, \"Wins\": 2.0, \"Losses\": 1.0, \"Winrate\": 67.0, \"KDA\": 6.2, \"Avg BT\": \"2.7\", \"GT\": \"39:05:00\", \"CSM\": 5.9, \"DPM\": 176.0, \"GPM\": 341.0, \"CSD@15\": 0.3, \"GD@15\": 366.0, \"XPD@15\": -174.0}, {\"Champion\": \"\\u00a0Nautilus\", \"Picks\": 5, \"Bans\": 3, \"Presence\": 21.0, \"Wins\": 2.0, \"Losses\": 3.0, \"Winrate\": 40.0, \"KDA\": 1.6, \"Avg BT\": \"9\", \"GT\": \"29:08:00\", \"CSM\": 1.2, \"DPM\": 199.0, \"GPM\": 248.0, \"CSD@15\": 1.2, \"GD@15\": 33.0, \"XPD@15\": -501.0}, {\"Champion\": \"\\u00a0Akali\", \"Picks\": 5, \"Bans\": 2, \"Presence\": 18.0, \"Wins\": 0.0, \"Losses\": 5.0, \"Winrate\": 0.0, \"KDA\": 0.9, \"Avg BT\": \"3\", \"GT\": \"27:54:00\", \"CSM\": 8.2, \"DPM\": 444.0, \"GPM\": 352.0, \"CSD@15\": -7.0, \"GD@15\": -1107.0, \"XPD@15\": -351.0}, {\"Champion\": \"\\u00a0Braum\", \"Picks\": 4, \"Bans\": 3, \"Presence\": 18.0, \"Wins\": 4.0, \"Losses\": 0.0, \"Winrate\": 100.0, \"KDA\": 6.6, \"Avg BT\": \"6.7\", \"GT\": \"35:12:00\", \"CSM\": 1.1, \"DPM\": 189.0, \"GPM\": 263.0, \"CSD@15\": 2.8, \"GD@15\": 617.0, \"XPD@15\": 536.0}, {\"Champion\": \"\\u00a0Neeko\", \"Picks\": 5, \"Bans\": 2, \"Presence\": 18.0, \"Wins\": 2.0, \"Losses\": 3.0, \"Winrate\": 40.0, \"KDA\": 3.2, \"Avg BT\": \"6\", \"GT\": \"30:45:00\", \"CSM\": 5.3, \"DPM\": 494.0, \"GPM\": 336.0, \"CSD@15\": 10.0, \"GD@15\": 693.0, \"XPD@15\": 568.0}, {\"Champion\": \"\\u00a0Tristana\", \"Picks\": 3, \"Bans\": 3, \"Presence\": 15.0, \"Wins\": 1.0, \"Losses\": 2.0, \"Winrate\": 33.0, \"KDA\": 3.5, \"Avg BT\": \"7.7\", \"GT\": \"32:16:00\", \"CSM\": 8.9, \"DPM\": 639.0, \"GPM\": 430.0, \"CSD@15\": -10.7, \"GD@15\": -434.0, \"XPD@15\": -508.0}, {\"Champion\": \"\\u00a0Brand\", \"Picks\": 1, \"Bans\": 4, \"Presence\": 13.0, \"Wins\": 1.0, \"Losses\": 0.0, \"Winrate\": 100.0, \"KDA\": 8.0, \"Avg BT\": \"4\", \"GT\": \"33:28:00\", \"CSM\": 7.7, \"DPM\": 845.0, \"GPM\": 430.0, \"CSD@15\": 30.0, \"GD@15\": 1976.0, \"XPD@15\": 1292.0}, {\"Champion\": \"\\u00a0LeBlanc\", \"Picks\": 1, \"Bans\": 4, \"Presence\": 13.0, \"Wins\": 1.0, \"Losses\": 0.0, \"Winrate\": 100.0, \"KDA\": 14.0, \"Avg BT\": \"5.3\", \"GT\": \"35:36:00\", \"CSM\": 8.4, \"DPM\": 1058.0, \"GPM\": 434.0, \"CSD@15\": 12.0, \"GD@15\": 120.0, \"XPD@15\": 570.0}, {\"Champion\": \"\\u00a0Miss Fortune\", \"Picks\": 4, \"Bans\": 1, \"Presence\": 13.0, \"Wins\": 3.0, \"Losses\": 1.0, \"Winrate\": 75.0, \"KDA\": 5.9, \"Avg BT\": \"10\", \"GT\": \"34:29:00\", \"CSM\": 9.7, \"DPM\": 885.0, \"GPM\": 487.0, \"CSD@15\": 4.2, \"GD@15\": 507.0, \"XPD@15\": 102.0}, {\"Champion\": \"\\u00a0Syndra\", \"Picks\": 3, \"Bans\": 2, \"Presence\": 13.0, \"Wins\": 0.0, \"Losses\": 3.0, \"Winrate\": 0.0, \"KDA\": 2.1, \"Avg BT\": \"8\", \"GT\": \"34:06:00\", \"CSM\": 7.6, \"DPM\": 554.0, \"GPM\": 380.0, \"CSD@15\": -5.3, \"GD@15\": -533.0, \"XPD@15\": -424.0}, {\"Champion\": \"\\u00a0Wukong\", \"Picks\": 4, \"Bans\": 1, \"Presence\": 13.0, \"Wins\": 2.0, \"Losses\": 2.0, \"Winrate\": 50.0, \"KDA\": 3.3, \"Avg BT\": \"5\", \"GT\": \"32:14:00\", \"CSM\": 5.9, \"DPM\": 392.0, \"GPM\": 352.0, \"CSD@15\": 0.5, \"GD@15\": 376.0, \"XPD@15\": -42.0}, {\"Champion\": \"\\u00a0Zyra\", \"Picks\": 3, \"Bans\": 2, \"Presence\": 13.0, \"Wins\": 0.0, \"Losses\": 3.0, \"Winrate\": 0.0, \"KDA\": 2.4, \"Avg BT\": \"5\", \"GT\": \"35:29:00\", \"CSM\": 6.8, \"DPM\": 656.0, \"GPM\": 358.0, \"CSD@15\": 22.7, \"GD@15\": 437.0, \"XPD@15\": 773.0}, {\"Champion\": \"\\u00a0Sylas\", \"Picks\": 4, \"Bans\": 1, \"Presence\": 13.0, \"Wins\": 4.0, \"Losses\": 0.0, \"Winrate\": 100.0, \"KDA\": 4.9, \"Avg BT\": \"8\", \"GT\": \"33:47:00\", \"CSM\": 8.5, \"DPM\": 548.0, \"GPM\": 437.0, \"CSD@15\": -7.5, \"GD@15\": 188.0, \"XPD@15\": -145.0}, {\"Champion\": \"\\u00a0Cassiopeia\", \"Picks\": 3, \"Bans\": 1, \"Presence\": 10.0, \"Wins\": 1.0, \"Losses\": 2.0, \"Winrate\": 33.0, \"KDA\": 2.4, \"Avg BT\": \"3\", \"GT\": \"36:09:00\", \"CSM\": 8.7, \"DPM\": 467.0, \"GPM\": 378.0, \"CSD@15\": -1.0, \"GD@15\": -573.0, \"XPD@15\": -462.0}, {\"Champion\": \"\\u00a0Olaf\", \"Picks\": 3, \"Bans\": 1, \"Presence\": 10.0, \"Wins\": 1.0, \"Losses\": 2.0, \"Winrate\": 33.0, \"KDA\": 1.6, \"Avg BT\": \"8\", \"GT\": \"33:13:00\", \"CSM\": 7.8, \"DPM\": 621.0, \"GPM\": 393.0, \"CSD@15\": -20.7, \"GD@15\": -861.0, \"XPD@15\": -986.0}, {\"Champion\": \"\\u00a0Amumu\", \"Picks\": 2, \"Bans\": 1, \"Presence\": 8.0, \"Wins\": 0.0, \"Losses\": 2.0, \"Winrate\": 0.0, \"KDA\": 2.2, \"Avg BT\": \"8\", \"GT\": \"33:27:00\", \"CSM\": 6.2, \"DPM\": 525.0, \"GPM\": 327.0, \"CSD@15\": 23.5, \"GD@15\": -110.0, \"XPD@15\": 597.0}, {\"Champion\": \"\\u00a0Draven\", \"Picks\": 2, \"Bans\": 1, \"Presence\": 8.0, \"Wins\": 1.0, \"Losses\": 1.0, \"Winrate\": 50.0, \"KDA\": 2.5, \"Avg BT\": \"9\", \"GT\": \"26:36:00\", \"CSM\": 9.1, \"DPM\": 573.0, \"GPM\": 512.0, \"CSD@15\": -11.0, \"GD@15\": 1220.0, \"XPD@15\": -90.0}, {\"Champion\": \"\\u00a0Galio\", \"Picks\": 3, \"Bans\": 0, \"Presence\": 8.0, \"Wins\": 2.0, \"Losses\": 1.0, \"Winrate\": 67.0, \"KDA\": 4.6, \"Avg BT\": \"-\", \"GT\": \"35:48:00\", \"CSM\": 7.4, \"DPM\": 477.0, \"GPM\": 370.0, \"CSD@15\": 2.7, \"GD@15\": 662.0, \"XPD@15\": 235.0}, {\"Champion\": \"\\u00a0Varus\", \"Picks\": 3, \"Bans\": 0, \"Presence\": 8.0, \"Wins\": 0.0, \"Losses\": 3.0, \"Winrate\": 0.0, \"KDA\": 1.6, \"Avg BT\": \"-\", \"GT\": \"36:25:00\", \"CSM\": 9.2, \"DPM\": 439.0, \"GPM\": 403.0, \"CSD@15\": 2.7, \"GD@15\": -278.0, \"XPD@15\": -398.0}, {\"Champion\": \"\\u00a0Yasuo\", \"Picks\": 2, \"Bans\": 1, \"Presence\": 8.0, \"Wins\": 1.0, \"Losses\": 1.0, \"Winrate\": 50.0, \"KDA\": 3.1, \"Avg BT\": \"7\", \"GT\": \"35:36:00\", \"CSM\": 8.4, \"DPM\": 423.0, \"GPM\": 419.0, \"CSD@15\": 2.0, \"GD@15\": 408.0, \"XPD@15\": 632.0}, {\"Champion\": \"\\u00a0Jarvan IV\", \"Picks\": 1, \"Bans\": 1, \"Presence\": 5.0, \"Wins\": 1.0, \"Losses\": 0.0, \"Winrate\": 100.0, \"KDA\": 6.3, \"Avg BT\": \"5\", \"GT\": \"33:07:00\", \"CSM\": 6.2, \"DPM\": 397.0, \"GPM\": 411.0, \"CSD@15\": -28.0, \"GD@15\": -563.0, \"XPD@15\": -964.0}, {\"Champion\": \"\\u00a0Jinx\", \"Picks\": 1, \"Bans\": 1, \"Presence\": 5.0, \"Wins\": 0.0, \"Losses\": 1.0, \"Winrate\": 0.0, \"KDA\": 4.5, \"Avg BT\": \"3\", \"GT\": \"45:13:00\", \"CSM\": 10.1, \"DPM\": 685.0, \"GPM\": 422.0, \"CSD@15\": 19.0, \"GD@15\": 315.0, \"XPD@15\": 1046.0}, {\"Champion\": \"\\u00a0Kennen\", \"Picks\": 2, \"Bans\": 0, \"Presence\": 5.0, \"Wins\": 1.0, \"Losses\": 1.0, \"Winrate\": 50.0, \"KDA\": 4.8, \"Avg BT\": \"-\", \"GT\": \"38:42:00\", \"CSM\": 8.0, \"DPM\": 719.0, \"GPM\": 390.0, \"CSD@15\": 11.5, \"GD@15\": -14.0, \"XPD@15\": -280.0}, {\"Champion\": \"\\u00a0Nami\", \"Picks\": 1, \"Bans\": 1, \"Presence\": 5.0, \"Wins\": 0.0, \"Losses\": 1.0, \"Winrate\": 0.0, \"KDA\": 12.0, \"Avg BT\": \"8\", \"GT\": \"42:14:00\", \"CSM\": 1.1, \"DPM\": 259.0, \"GPM\": 217.0, \"CSD@15\": 3.0, \"GD@15\": 116.0, \"XPD@15\": 20.0}, {\"Champion\": \"\\u00a0Sion\", \"Picks\": 2, \"Bans\": 0, \"Presence\": 5.0, \"Wins\": 1.0, \"Losses\": 1.0, \"Winrate\": 50.0, \"KDA\": 1.4, \"Avg BT\": \"-\", \"GT\": \"29:11:00\", \"CSM\": 8.2, \"DPM\": 377.0, \"GPM\": 348.0, \"CSD@15\": 25.5, \"GD@15\": 789.0, \"XPD@15\": 272.0}, {\"Champion\": \"\\u00a0Darius\", \"Picks\": 1, \"Bans\": 0, \"Presence\": 3.0, \"Wins\": 0.0, \"Losses\": 1.0, \"Winrate\": 0.0, \"KDA\": 1.3, \"Avg BT\": \"-\", \"GT\": \"33:28:00\", \"CSM\": 7.6, \"DPM\": 414.0, \"GPM\": 348.0, \"CSD@15\": -15.0, \"GD@15\": -952.0, \"XPD@15\": -1226.0}, {\"Champion\": \"\\u00a0Gragas\", \"Picks\": 1, \"Bans\": 0, \"Presence\": 3.0, \"Wins\": 1.0, \"Losses\": 0.0, \"Winrate\": 100.0, \"KDA\": 14.0, \"Avg BT\": \"-\", \"GT\": \"28:08:00\", \"CSM\": 8.0, \"DPM\": 500.0, \"GPM\": 428.0, \"CSD@15\": 3.0, \"GD@15\": 477.0, \"XPD@15\": 355.0}, {\"Champion\": \"\\u00a0Jayce\", \"Picks\": 1, \"Bans\": 0, \"Presence\": 3.0, \"Wins\": 1.0, \"Losses\": 0.0, \"Winrate\": 100.0, \"KDA\": 7.0, \"Avg BT\": \"-\", \"GT\": \"28:09:00\", \"CSM\": 8.2, \"DPM\": 1063.0, \"GPM\": 478.0, \"CSD@15\": 27.0, \"GD@15\": 1544.0, \"XPD@15\": 1302.0}, {\"Champion\": \"\\u00a0Nunu\", \"Picks\": 1, \"Bans\": 0, \"Presence\": 3.0, \"Wins\": 1.0, \"Losses\": 0.0, \"Winrate\": 100.0, \"KDA\": 21.0, \"Avg BT\": \"-\", \"GT\": \"37:44:00\", \"CSM\": 6.8, \"DPM\": 398.0, \"GPM\": 403.0, \"CSD@15\": -24.0, \"GD@15\": -1259.0, \"XPD@15\": -1260.0}, {\"Champion\": \"\\u00a0Twitch\", \"Picks\": 1, \"Bans\": 0, \"Presence\": 3.0, \"Wins\": 1.0, \"Losses\": 0.0, \"Winrate\": 100.0, \"KDA\": 17.0, \"Avg BT\": \"-\", \"GT\": \"33:11:00\", \"CSM\": 9.8, \"DPM\": 940.0, \"GPM\": 498.0, \"CSD@15\": -15.0, \"GD@15\": 323.0, \"XPD@15\": 57.0}, {\"Champion\": \"\\u00a0Urgot\", \"Picks\": 1, \"Bans\": 0, \"Presence\": 3.0, \"Wins\": 0.0, \"Losses\": 1.0, \"Winrate\": 0.0, \"KDA\": 2.3, \"Avg BT\": \"-\", \"GT\": \"33:26:00\", \"CSM\": 10.2, \"DPM\": 640.0, \"GPM\": 474.0, \"CSD@15\": 20.0, \"GD@15\": 445.0, \"XPD@15\": 613.0}, {\"Champion\": \"\\u00a0Xin Zhao\", \"Picks\": 1, \"Bans\": 0, \"Presence\": 3.0, \"Wins\": 1.0, \"Losses\": 0.0, \"Winrate\": 100.0, \"KDA\": 11.0, \"Avg BT\": \"-\", \"GT\": \"32:48:00\", \"CSM\": 7.2, \"DPM\": 341.0, \"GPM\": 383.0, \"CSD@15\": 2.0, \"GD@15\": 647.0, \"XPD@15\": 14.0}, {\"Champion\": \"\\u00a0Camille\", \"Picks\": 1, \"Bans\": 0, \"Presence\": 3.0, \"Wins\": 1.0, \"Losses\": 0.0, \"Winrate\": 100.0, \"KDA\": 6.5, \"Avg BT\": \"-\", \"GT\": \"39:50:00\", \"CSM\": 8.8, \"DPM\": 554.0, \"GPM\": 466.0, \"CSD@15\": 15.0, \"GD@15\": 821.0, \"XPD@15\": 448.0}, {\"Champion\": \"\\u00a0Lillia\", \"Picks\": 1, \"Bans\": 0, \"Presence\": 3.0, \"Wins\": 0.0, \"Losses\": 1.0, \"Winrate\": 0.0, \"KDA\": 4.0, \"Avg BT\": \"-\", \"GT\": \"45:40:00\", \"CSM\": 6.7, \"DPM\": 386.0, \"GPM\": 347.0, \"CSD@15\": -7.0, \"GD@15\": -865.0, \"XPD@15\": -495.0}, {\"Champion\": \"\\u00a0Hwei\", \"Picks\": 1, \"Bans\": 0, \"Presence\": 3.0, \"Wins\": 1.0, \"Losses\": 0.0, \"Winrate\": 100.0, \"KDA\": 19.0, \"Avg BT\": \"-\", \"GT\": \"37:44:00\", \"CSM\": 7.2, \"DPM\": 778.0, \"GPM\": 442.0, \"CSD@15\": -11.0, \"GD@15\": -26.0, \"XPD@15\": -727.0}]}}, {\"mode\": \"vega-lite\"});\n",
              "</script>"
            ],
            "text/plain": [
              "alt.Chart(...)"
            ]
          },
          "metadata": {},
          "execution_count": 14
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Tests\n",
        "reg = pg.linear_regression(df[['DPM',\t'GPM']], df['Winrate'])\n",
        "from scipy.stats import spearmanr\n",
        "coef, p_value = spearmanr(df['GPM'], df['Winrate'])  #GPM influe significativement sur le %de winrate\n",
        "print(f\"Spearman correlation coefficient: {coef}, p-value: {p_value}\")\n",
        "print(reg)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "TkBprpQQ6z22",
        "outputId": "97761aae-4b0d-4d58-facf-e1ff9c5ad2a3"
      },
      "execution_count": 15,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Spearman correlation coefficient: 0.3521604451768626, p-value: 0.0043200862627112745\n",
            "       names       coef         se         T      pval        r2    adj_r2  \\\n",
            "0  Intercept -17.662342  25.299889 -0.698119  0.487755  0.119292  0.090416   \n",
            "1        DPM  -0.020073   0.030541 -0.657235  0.513502  0.119292  0.090416   \n",
            "2        GPM   0.203858   0.095025  2.145315  0.035917  0.119292  0.090416   \n",
            "\n",
            "    CI[2.5%]  CI[97.5%]  \n",
            "0 -68.252596  32.927912  \n",
            "1  -0.081143   0.040998  \n",
            "2   0.013844   0.393872  \n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df_2 = df.drop('Champion', axis=1)\n",
        "df_2 = df_2.drop('Avg BT', axis=1)\n",
        "df_2 = df_2.drop('GT', axis=1)\n",
        "matrix = df_2.to_numpy()"
      ],
      "metadata": {
        "id": "MC7JfAGA6Plz"
      },
      "execution_count": 16,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "pca=  decomposition.PCA(n_components=2)\n",
        "pca.fit(matrix)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 80
        },
        "id": "ELjCJ3up7dqK",
        "outputId": "98d0149f-bdc6-4102-bbbd-a65d53c6e7a7"
      },
      "execution_count": 17,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "PCA(n_components=2)"
            ],
            "text/html": [
              "<style>#sk-container-id-1 {\n",
              "  /* Definition of color scheme common for light and dark mode */\n",
              "  --sklearn-color-text: #000;\n",
              "  --sklearn-color-text-muted: #666;\n",
              "  --sklearn-color-line: gray;\n",
              "  /* Definition of color scheme for unfitted estimators */\n",
              "  --sklearn-color-unfitted-level-0: #fff5e6;\n",
              "  --sklearn-color-unfitted-level-1: #f6e4d2;\n",
              "  --sklearn-color-unfitted-level-2: #ffe0b3;\n",
              "  --sklearn-color-unfitted-level-3: chocolate;\n",
              "  /* Definition of color scheme for fitted estimators */\n",
              "  --sklearn-color-fitted-level-0: #f0f8ff;\n",
              "  --sklearn-color-fitted-level-1: #d4ebff;\n",
              "  --sklearn-color-fitted-level-2: #b3dbfd;\n",
              "  --sklearn-color-fitted-level-3: cornflowerblue;\n",
              "\n",
              "  /* Specific color for light theme */\n",
              "  --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
              "  --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));\n",
              "  --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
              "  --sklearn-color-icon: #696969;\n",
              "\n",
              "  @media (prefers-color-scheme: dark) {\n",
              "    /* Redefinition of color scheme for dark theme */\n",
              "    --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
              "    --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));\n",
              "    --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
              "    --sklearn-color-icon: #878787;\n",
              "  }\n",
              "}\n",
              "\n",
              "#sk-container-id-1 {\n",
              "  color: var(--sklearn-color-text);\n",
              "}\n",
              "\n",
              "#sk-container-id-1 pre {\n",
              "  padding: 0;\n",
              "}\n",
              "\n",
              "#sk-container-id-1 input.sk-hidden--visually {\n",
              "  border: 0;\n",
              "  clip: rect(1px 1px 1px 1px);\n",
              "  clip: rect(1px, 1px, 1px, 1px);\n",
              "  height: 1px;\n",
              "  margin: -1px;\n",
              "  overflow: hidden;\n",
              "  padding: 0;\n",
              "  position: absolute;\n",
              "  width: 1px;\n",
              "}\n",
              "\n",
              "#sk-container-id-1 div.sk-dashed-wrapped {\n",
              "  border: 1px dashed var(--sklearn-color-line);\n",
              "  margin: 0 0.4em 0.5em 0.4em;\n",
              "  box-sizing: border-box;\n",
              "  padding-bottom: 0.4em;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "}\n",
              "\n",
              "#sk-container-id-1 div.sk-container {\n",
              "  /* jupyter's `normalize.less` sets `[hidden] { display: none; }`\n",
              "     but bootstrap.min.css set `[hidden] { display: none !important; }`\n",
              "     so we also need the `!important` here to be able to override the\n",
              "     default hidden behavior on the sphinx rendered scikit-learn.org.\n",
              "     See: https://github.com/scikit-learn/scikit-learn/issues/21755 */\n",
              "  display: inline-block !important;\n",
              "  position: relative;\n",
              "}\n",
              "\n",
              "#sk-container-id-1 div.sk-text-repr-fallback {\n",
              "  display: none;\n",
              "}\n",
              "\n",
              "div.sk-parallel-item,\n",
              "div.sk-serial,\n",
              "div.sk-item {\n",
              "  /* draw centered vertical line to link estimators */\n",
              "  background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));\n",
              "  background-size: 2px 100%;\n",
              "  background-repeat: no-repeat;\n",
              "  background-position: center center;\n",
              "}\n",
              "\n",
              "/* Parallel-specific style estimator block */\n",
              "\n",
              "#sk-container-id-1 div.sk-parallel-item::after {\n",
              "  content: \"\";\n",
              "  width: 100%;\n",
              "  border-bottom: 2px solid var(--sklearn-color-text-on-default-background);\n",
              "  flex-grow: 1;\n",
              "}\n",
              "\n",
              "#sk-container-id-1 div.sk-parallel {\n",
              "  display: flex;\n",
              "  align-items: stretch;\n",
              "  justify-content: center;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "  position: relative;\n",
              "}\n",
              "\n",
              "#sk-container-id-1 div.sk-parallel-item {\n",
              "  display: flex;\n",
              "  flex-direction: column;\n",
              "}\n",
              "\n",
              "#sk-container-id-1 div.sk-parallel-item:first-child::after {\n",
              "  align-self: flex-end;\n",
              "  width: 50%;\n",
              "}\n",
              "\n",
              "#sk-container-id-1 div.sk-parallel-item:last-child::after {\n",
              "  align-self: flex-start;\n",
              "  width: 50%;\n",
              "}\n",
              "\n",
              "#sk-container-id-1 div.sk-parallel-item:only-child::after {\n",
              "  width: 0;\n",
              "}\n",
              "\n",
              "/* Serial-specific style estimator block */\n",
              "\n",
              "#sk-container-id-1 div.sk-serial {\n",
              "  display: flex;\n",
              "  flex-direction: column;\n",
              "  align-items: center;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "  padding-right: 1em;\n",
              "  padding-left: 1em;\n",
              "}\n",
              "\n",
              "\n",
              "/* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is\n",
              "clickable and can be expanded/collapsed.\n",
              "- Pipeline and ColumnTransformer use this feature and define the default style\n",
              "- Estimators will overwrite some part of the style using the `sk-estimator` class\n",
              "*/\n",
              "\n",
              "/* Pipeline and ColumnTransformer style (default) */\n",
              "\n",
              "#sk-container-id-1 div.sk-toggleable {\n",
              "  /* Default theme specific background. It is overwritten whether we have a\n",
              "  specific estimator or a Pipeline/ColumnTransformer */\n",
              "  background-color: var(--sklearn-color-background);\n",
              "}\n",
              "\n",
              "/* Toggleable label */\n",
              "#sk-container-id-1 label.sk-toggleable__label {\n",
              "  cursor: pointer;\n",
              "  display: flex;\n",
              "  width: 100%;\n",
              "  margin-bottom: 0;\n",
              "  padding: 0.5em;\n",
              "  box-sizing: border-box;\n",
              "  text-align: center;\n",
              "  align-items: start;\n",
              "  justify-content: space-between;\n",
              "  gap: 0.5em;\n",
              "}\n",
              "\n",
              "#sk-container-id-1 label.sk-toggleable__label .caption {\n",
              "  font-size: 0.6rem;\n",
              "  font-weight: lighter;\n",
              "  color: var(--sklearn-color-text-muted);\n",
              "}\n",
              "\n",
              "#sk-container-id-1 label.sk-toggleable__label-arrow:before {\n",
              "  /* Arrow on the left of the label */\n",
              "  content: \"▸\";\n",
              "  float: left;\n",
              "  margin-right: 0.25em;\n",
              "  color: var(--sklearn-color-icon);\n",
              "}\n",
              "\n",
              "#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {\n",
              "  color: var(--sklearn-color-text);\n",
              "}\n",
              "\n",
              "/* Toggleable content - dropdown */\n",
              "\n",
              "#sk-container-id-1 div.sk-toggleable__content {\n",
              "  max-height: 0;\n",
              "  max-width: 0;\n",
              "  overflow: hidden;\n",
              "  text-align: left;\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-1 div.sk-toggleable__content.fitted {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-1 div.sk-toggleable__content pre {\n",
              "  margin: 0.2em;\n",
              "  border-radius: 0.25em;\n",
              "  color: var(--sklearn-color-text);\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-1 div.sk-toggleable__content.fitted pre {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {\n",
              "  /* Expand drop-down */\n",
              "  max-height: 200px;\n",
              "  max-width: 100%;\n",
              "  overflow: auto;\n",
              "}\n",
              "\n",
              "#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {\n",
              "  content: \"▾\";\n",
              "}\n",
              "\n",
              "/* Pipeline/ColumnTransformer-specific style */\n",
              "\n",
              "#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
              "  color: var(--sklearn-color-text);\n",
              "  background-color: var(--sklearn-color-unfitted-level-2);\n",
              "}\n",
              "\n",
              "#sk-container-id-1 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
              "  background-color: var(--sklearn-color-fitted-level-2);\n",
              "}\n",
              "\n",
              "/* Estimator-specific style */\n",
              "\n",
              "/* Colorize estimator box */\n",
              "#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-2);\n",
              "}\n",
              "\n",
              "#sk-container-id-1 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-2);\n",
              "}\n",
              "\n",
              "#sk-container-id-1 div.sk-label label.sk-toggleable__label,\n",
              "#sk-container-id-1 div.sk-label label {\n",
              "  /* The background is the default theme color */\n",
              "  color: var(--sklearn-color-text-on-default-background);\n",
              "}\n",
              "\n",
              "/* On hover, darken the color of the background */\n",
              "#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {\n",
              "  color: var(--sklearn-color-text);\n",
              "  background-color: var(--sklearn-color-unfitted-level-2);\n",
              "}\n",
              "\n",
              "/* Label box, darken color on hover, fitted */\n",
              "#sk-container-id-1 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {\n",
              "  color: var(--sklearn-color-text);\n",
              "  background-color: var(--sklearn-color-fitted-level-2);\n",
              "}\n",
              "\n",
              "/* Estimator label */\n",
              "\n",
              "#sk-container-id-1 div.sk-label label {\n",
              "  font-family: monospace;\n",
              "  font-weight: bold;\n",
              "  display: inline-block;\n",
              "  line-height: 1.2em;\n",
              "}\n",
              "\n",
              "#sk-container-id-1 div.sk-label-container {\n",
              "  text-align: center;\n",
              "}\n",
              "\n",
              "/* Estimator-specific */\n",
              "#sk-container-id-1 div.sk-estimator {\n",
              "  font-family: monospace;\n",
              "  border: 1px dotted var(--sklearn-color-border-box);\n",
              "  border-radius: 0.25em;\n",
              "  box-sizing: border-box;\n",
              "  margin-bottom: 0.5em;\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-1 div.sk-estimator.fitted {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-0);\n",
              "}\n",
              "\n",
              "/* on hover */\n",
              "#sk-container-id-1 div.sk-estimator:hover {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-2);\n",
              "}\n",
              "\n",
              "#sk-container-id-1 div.sk-estimator.fitted:hover {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-2);\n",
              "}\n",
              "\n",
              "/* Specification for estimator info (e.g. \"i\" and \"?\") */\n",
              "\n",
              "/* Common style for \"i\" and \"?\" */\n",
              "\n",
              ".sk-estimator-doc-link,\n",
              "a:link.sk-estimator-doc-link,\n",
              "a:visited.sk-estimator-doc-link {\n",
              "  float: right;\n",
              "  font-size: smaller;\n",
              "  line-height: 1em;\n",
              "  font-family: monospace;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "  border-radius: 1em;\n",
              "  height: 1em;\n",
              "  width: 1em;\n",
              "  text-decoration: none !important;\n",
              "  margin-left: 0.5em;\n",
              "  text-align: center;\n",
              "  /* unfitted */\n",
              "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
              "  color: var(--sklearn-color-unfitted-level-1);\n",
              "}\n",
              "\n",
              ".sk-estimator-doc-link.fitted,\n",
              "a:link.sk-estimator-doc-link.fitted,\n",
              "a:visited.sk-estimator-doc-link.fitted {\n",
              "  /* fitted */\n",
              "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
              "  color: var(--sklearn-color-fitted-level-1);\n",
              "}\n",
              "\n",
              "/* On hover */\n",
              "div.sk-estimator:hover .sk-estimator-doc-link:hover,\n",
              ".sk-estimator-doc-link:hover,\n",
              "div.sk-label-container:hover .sk-estimator-doc-link:hover,\n",
              ".sk-estimator-doc-link:hover {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-3);\n",
              "  color: var(--sklearn-color-background);\n",
              "  text-decoration: none;\n",
              "}\n",
              "\n",
              "div.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,\n",
              ".sk-estimator-doc-link.fitted:hover,\n",
              "div.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,\n",
              ".sk-estimator-doc-link.fitted:hover {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-3);\n",
              "  color: var(--sklearn-color-background);\n",
              "  text-decoration: none;\n",
              "}\n",
              "\n",
              "/* Span, style for the box shown on hovering the info icon */\n",
              ".sk-estimator-doc-link span {\n",
              "  display: none;\n",
              "  z-index: 9999;\n",
              "  position: relative;\n",
              "  font-weight: normal;\n",
              "  right: .2ex;\n",
              "  padding: .5ex;\n",
              "  margin: .5ex;\n",
              "  width: min-content;\n",
              "  min-width: 20ex;\n",
              "  max-width: 50ex;\n",
              "  color: var(--sklearn-color-text);\n",
              "  box-shadow: 2pt 2pt 4pt #999;\n",
              "  /* unfitted */\n",
              "  background: var(--sklearn-color-unfitted-level-0);\n",
              "  border: .5pt solid var(--sklearn-color-unfitted-level-3);\n",
              "}\n",
              "\n",
              ".sk-estimator-doc-link.fitted span {\n",
              "  /* fitted */\n",
              "  background: var(--sklearn-color-fitted-level-0);\n",
              "  border: var(--sklearn-color-fitted-level-3);\n",
              "}\n",
              "\n",
              ".sk-estimator-doc-link:hover span {\n",
              "  display: block;\n",
              "}\n",
              "\n",
              "/* \"?\"-specific style due to the `<a>` HTML tag */\n",
              "\n",
              "#sk-container-id-1 a.estimator_doc_link {\n",
              "  float: right;\n",
              "  font-size: 1rem;\n",
              "  line-height: 1em;\n",
              "  font-family: monospace;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "  border-radius: 1rem;\n",
              "  height: 1rem;\n",
              "  width: 1rem;\n",
              "  text-decoration: none;\n",
              "  /* unfitted */\n",
              "  color: var(--sklearn-color-unfitted-level-1);\n",
              "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
              "}\n",
              "\n",
              "#sk-container-id-1 a.estimator_doc_link.fitted {\n",
              "  /* fitted */\n",
              "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
              "  color: var(--sklearn-color-fitted-level-1);\n",
              "}\n",
              "\n",
              "/* On hover */\n",
              "#sk-container-id-1 a.estimator_doc_link:hover {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-3);\n",
              "  color: var(--sklearn-color-background);\n",
              "  text-decoration: none;\n",
              "}\n",
              "\n",
              "#sk-container-id-1 a.estimator_doc_link.fitted:hover {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-3);\n",
              "}\n",
              "</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>PCA(n_components=2)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow\"><div><div>PCA</div></div><div><a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.6/modules/generated/sklearn.decomposition.PCA.html\">?<span>Documentation for PCA</span></a><span class=\"sk-estimator-doc-link fitted\">i<span>Fitted</span></span></div></label><div class=\"sk-toggleable__content fitted\"><pre>PCA(n_components=2)</pre></div> </div></div></div></div>"
            ]
          },
          "metadata": {},
          "execution_count": 17
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print(pca.explained_variance_ratio_)\n",
        "print(pca.singular_values_)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Q_mgXRON8eaS",
        "outputId": "ff8f25f7-1ee3-4498-b7af-5a88dacfe40e"
      },
      "execution_count": 18,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[0.82025561 0.09769917]\n",
            "[5843.5828027  2016.74056699]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "to_plot=pca.transform(matrix)\n",
        "to_plot.shape"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Ejr7E4mz8qEq",
        "outputId": "45c6a01d-dd38-4243-bd4c-abdcf2fe3130"
      },
      "execution_count": 19,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(64, 2)"
            ]
          },
          "metadata": {},
          "execution_count": 19
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt"
      ],
      "metadata": {
        "id": "r7TrMcDs8zoW"
      },
      "execution_count": 20,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "plt.scatter(x=to_plot[:,0], y=to_plot[:,1])"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 447
        },
        "id": "vsYmMdNT82jt",
        "outputId": "f053a56d-d34e-4135-d466-410b920ac2a7"
      },
      "execution_count": 21,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.collections.PathCollection at 0x7b451d312a90>"
            ]
          },
          "metadata": {},
          "execution_count": 21
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df_plot = df.copy()"
      ],
      "metadata": {
        "id": "i3EZ40hX9xDB"
      },
      "execution_count": 22,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df_plot['PC1']=to_plot[:,0]\n",
        "df_plot['PC2']=to_plot[:,1]"
      ],
      "metadata": {
        "id": "i0Od8udZ94nJ"
      },
      "execution_count": 23,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "alt.Chart(df_plot).mark_point().encode(\n",
        "    x='PC1',\n",
        "    y='PC2',\n",
        "    tooltip=['Champion','Winrate','Picks'],\n",
        "    color=alt.Color('Winrate', scale=alt.Scale(scheme='reds'))\n",
        ")\n",
        "#PCA ne permet pas de faire de distinctions car les variations de statistiques entre champions sont inhérentes à leurs roles dans la partie.\n",
        "#Il faudrait mieux analyser les champions selon leur rôle (Top,Jgl,Mid,Adc,Supp) et avec moins de variables\n",
        "#On ne peut former de cluster distinct sur cette PCA."
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 368
        },
        "id": "X0Lj2pBS-KS0",
        "outputId": "f381f235-0524-4cb9-dc68-8f5b652e91ba"
      },
      "execution_count": 24,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "\n",
              "<style>\n",
              "  #altair-viz-dac96f123c164100b63f458da06c165b.vega-embed {\n",
              "    width: 100%;\n",
              "    display: flex;\n",
              "  }\n",
              "\n",
              "  #altair-viz-dac96f123c164100b63f458da06c165b.vega-embed details,\n",
              "  #altair-viz-dac96f123c164100b63f458da06c165b.vega-embed details summary {\n",
              "    position: relative;\n",
              "  }\n",
              "</style>\n",
              "<div id=\"altair-viz-dac96f123c164100b63f458da06c165b\"></div>\n",
              "<script type=\"text/javascript\">\n",
              "  var VEGA_DEBUG = (typeof VEGA_DEBUG == \"undefined\") ? {} : VEGA_DEBUG;\n",
              "  (function(spec, embedOpt){\n",
              "    let outputDiv = document.currentScript.previousElementSibling;\n",
              "    if (outputDiv.id !== \"altair-viz-dac96f123c164100b63f458da06c165b\") {\n",
              "      outputDiv = document.getElementById(\"altair-viz-dac96f123c164100b63f458da06c165b\");\n",
              "    }\n",
              "\n",
              "    const paths = {\n",
              "      \"vega\": \"https://cdn.jsdelivr.net/npm/vega@5?noext\",\n",
              "      \"vega-lib\": \"https://cdn.jsdelivr.net/npm/vega-lib?noext\",\n",
              "      \"vega-lite\": \"https://cdn.jsdelivr.net/npm/vega-lite@5.20.1?noext\",\n",
              "      \"vega-embed\": \"https://cdn.jsdelivr.net/npm/vega-embed@6?noext\",\n",
              "    };\n",
              "\n",
              "    function maybeLoadScript(lib, version) {\n",
              "      var key = `${lib.replace(\"-\", \"\")}_version`;\n",
              "      return (VEGA_DEBUG[key] == version) ?\n",
              "        Promise.resolve(paths[lib]) :\n",
              "        new Promise(function(resolve, reject) {\n",
              "          var s = document.createElement('script');\n",
              "          document.getElementsByTagName(\"head\")[0].appendChild(s);\n",
              "          s.async = true;\n",
              "          s.onload = () => {\n",
              "            VEGA_DEBUG[key] = version;\n",
              "            return resolve(paths[lib]);\n",
              "          };\n",
              "          s.onerror = () => reject(`Error loading script: ${paths[lib]}`);\n",
              "          s.src = paths[lib];\n",
              "        });\n",
              "    }\n",
              "\n",
              "    function showError(err) {\n",
              "      outputDiv.innerHTML = `<div class=\"error\" style=\"color:red;\">${err}</div>`;\n",
              "      throw err;\n",
              "    }\n",
              "\n",
              "    function displayChart(vegaEmbed) {\n",
              "      vegaEmbed(outputDiv, spec, embedOpt)\n",
              "        .catch(err => showError(`Javascript Error: ${err.message}<br>This usually means there's a typo in your chart specification. See the javascript console for the full traceback.`));\n",
              "    }\n",
              "\n",
              "    if(typeof define === \"function\" && define.amd) {\n",
              "      requirejs.config({paths});\n",
              "      let deps = [\"vega-embed\"];\n",
              "      require(deps, displayChart, err => showError(`Error loading script: ${err.message}`));\n",
              "    } else {\n",
              "      maybeLoadScript(\"vega\", \"5\")\n",
              "        .then(() => maybeLoadScript(\"vega-lite\", \"5.20.1\"))\n",
              "        .then(() => maybeLoadScript(\"vega-embed\", \"6\"))\n",
              "        .catch(showError)\n",
              "        .then(() => displayChart(vegaEmbed));\n",
              "    }\n",
              "  })({\"config\": {\"view\": {\"continuousWidth\": 300, \"continuousHeight\": 300}}, \"data\": {\"name\": \"data-d47ed4bd3402a98e8ca9aa3cf330eef0\"}, \"mark\": {\"type\": \"point\"}, \"encoding\": {\"color\": {\"field\": \"Winrate\", \"scale\": {\"scheme\": \"reds\"}, \"type\": \"quantitative\"}, \"tooltip\": [{\"field\": \"Champion\", \"type\": \"nominal\"}, {\"field\": \"Winrate\", \"type\": \"quantitative\"}, {\"field\": \"Picks\", \"type\": \"quantitative\"}], \"x\": {\"field\": \"PC1\", \"type\": \"quantitative\"}, \"y\": {\"field\": \"PC2\", \"type\": \"quantitative\"}}, \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.20.1.json\", \"datasets\": {\"data-d47ed4bd3402a98e8ca9aa3cf330eef0\": [{\"Champion\": \"\\u00a0Aurora\", \"Picks\": 9, \"Bans\": 30, \"Presence\": 100.0, \"Wins\": 7.0, \"Losses\": 2.0, \"Winrate\": 78.0, \"KDA\": 6.6, \"Avg BT\": \"3.6\", \"GT\": \"32:52:00\", \"CSM\": 7.9, \"DPM\": 678.0, \"GPM\": 402.0, \"CSD@15\": 0.6, \"GD@15\": 76.0, \"XPD@15\": -10.0, \"PC1\": -17.494168913178996, \"PC2\": -39.74905408809366}, {\"Champion\": \"\\u00a0Yone\", \"Picks\": 18, \"Bans\": 19, \"Presence\": 95.0, \"Wins\": 13.0, \"Losses\": 5.0, \"Winrate\": 72.0, \"KDA\": 4.4, \"Avg BT\": \"3.2\", \"GT\": \"32:14:00\", \"CSM\": 9.6, \"DPM\": 711.0, \"GPM\": 451.0, \"CSD@15\": 6.7, \"GD@15\": 434.0, \"XPD@15\": 372.0, \"PC1\": 505.98696990465976, \"PC2\": 0.6500501295660541}, {\"Champion\": \"\\u00a0Rell\", \"Picks\": 26, \"Bans\": 5, \"Presence\": 79.0, \"Wins\": 15.0, \"Losses\": 11.0, \"Winrate\": 58.0, \"KDA\": 3.0, \"Avg BT\": \"8.8\", \"GT\": \"34:22:00\", \"CSM\": 1.0, \"DPM\": 144.0, \"GPM\": 247.0, \"CSD@15\": -0.5, \"GD@15\": 11.0, \"XPD@15\": -58.0, \"PC1\": -148.75791478865122, \"PC2\": 33.855704519281446}, {\"Champion\": \"\\u00a0Jax\", \"Picks\": 15, \"Bans\": 15, \"Presence\": 77.0, \"Wins\": 6.0, \"Losses\": 9.0, \"Winrate\": 40.0, \"KDA\": 2.6, \"Avg BT\": \"5\", \"GT\": \"35:00:00\", \"CSM\": 7.8, \"DPM\": 403.0, \"GPM\": 396.0, \"CSD@15\": -8.9, \"GD@15\": -128.0, \"XPD@15\": -201.0, \"PC1\": -321.01683273679555, \"PC2\": -17.89824032835429}, {\"Champion\": \"\\u00a0Skarner\", \"Picks\": 13, \"Bans\": 17, \"Presence\": 77.0, \"Wins\": 7.0, \"Losses\": 6.0, \"Winrate\": 54.0, \"KDA\": 3.9, \"Avg BT\": \"4\", \"GT\": \"31:48:00\", \"CSM\": 5.8, \"DPM\": 372.0, \"GPM\": 332.0, \"CSD@15\": 2.4, \"GD@15\": 77.0, \"XPD@15\": 77.0, \"PC1\": 12.404299375016791, \"PC2\": 60.93016826693152}, {\"Champion\": \"\\u00a0Ziggs\", \"Picks\": 5, \"Bans\": 24, \"Presence\": 74.0, \"Wins\": 2.0, \"Losses\": 3.0, \"Winrate\": 40.0, \"KDA\": 3.9, \"Avg BT\": \"4.5\", \"GT\": \"32:33:00\", \"CSM\": 9.7, \"DPM\": 735.0, \"GPM\": 451.0, \"CSD@15\": 15.0, \"GD@15\": 685.0, \"XPD@15\": 877.0, \"PC1\": 1030.9447528528754, \"PC2\": 208.5655228128993}, {\"Champion\": \"\\u00a0Ashe\", \"Picks\": 5, \"Bans\": 23, \"Presence\": 72.0, \"Wins\": 3.0, \"Losses\": 2.0, \"Winrate\": 60.0, \"KDA\": 6.6, \"Avg BT\": \"6.4\", \"GT\": \"34:26:00\", \"CSM\": 9.7, \"DPM\": 654.0, \"GPM\": 457.0, \"CSD@15\": -1.6, \"GD@15\": 4.0, \"XPD@15\": 164.0, \"PC1\": 44.63722137792408, \"PC2\": 134.29049852696463}, {\"Champion\": \"\\u00a0Gnar\", \"Picks\": 17, \"Bans\": 11, \"Presence\": 72.0, \"Wins\": 11.0, \"Losses\": 6.0, \"Winrate\": 65.0, \"KDA\": 3.1, \"Avg BT\": \"4\", \"GT\": \"32:43:00\", \"CSM\": 8.0, \"DPM\": 520.0, \"GPM\": 402.0, \"CSD@15\": -6.6, \"GD@15\": -551.0, \"XPD@15\": -547.0, \"PC1\": -853.4633785310348, \"PC2\": -9.71559076139647}, {\"Champion\": \"\\u00a0Kaisa\", \"Picks\": 18, \"Bans\": 10, \"Presence\": 72.0, \"Wins\": 10.0, \"Losses\": 8.0, \"Winrate\": 56.0, \"KDA\": 5.9, \"Avg BT\": \"8.4\", \"GT\": \"33:01:00\", \"CSM\": 10.0, \"DPM\": 792.0, \"GPM\": 472.0, \"CSD@15\": -4.8, \"GD@15\": -344.0, \"XPD@15\": -86.0, \"PC1\": -366.6263698355726, \"PC2\": 163.23464694246923}, {\"Champion\": \"\\u00a0Poppy\", \"Picks\": 9, \"Bans\": 17, \"Presence\": 67.0, \"Wins\": 2.0, \"Losses\": 7.0, \"Winrate\": 22.0, \"KDA\": 1.9, \"Avg BT\": \"6.5\", \"GT\": \"35:25:00\", \"CSM\": 2.6, \"DPM\": 256.0, \"GPM\": 261.0, \"CSD@15\": 2.4, \"GD@15\": 61.0, \"XPD@15\": -20.0, \"PC1\": -76.45481114642331, \"PC2\": 18.82325851629335}, {\"Champion\": \"\\u00a0Kalista\", \"Picks\": 11, \"Bans\": 15, \"Presence\": 67.0, \"Wins\": 9.0, \"Losses\": 2.0, \"Winrate\": 82.0, \"KDA\": 5.5, \"Avg BT\": \"7.4\", \"GT\": \"34:39:00\", \"CSM\": 9.1, \"DPM\": 605.0, \"GPM\": 447.0, \"CSD@15\": -7.6, \"GD@15\": -218.0, \"XPD@15\": -504.0, \"PC1\": -570.5143447449615, \"PC2\": -209.97476375910847}, {\"Champion\": \"\\u00a0Vi\", \"Picks\": 15, \"Bans\": 9, \"Presence\": 62.0, \"Wins\": 7.0, \"Losses\": 8.0, \"Winrate\": 47.0, \"KDA\": 2.6, \"Avg BT\": \"4.3\", \"GT\": \"34:31:00\", \"CSM\": 6.1, \"DPM\": 295.0, \"GPM\": 345.0, \"CSD@15\": -3.0, \"GD@15\": -27.0, \"XPD@15\": 224.0, \"PC1\": 27.345652057524717, \"PC2\": 244.43703852628636}, {\"Champion\": \"\\u00a0Jhin\", \"Picks\": 14, \"Bans\": 9, \"Presence\": 59.0, \"Wins\": 5.0, \"Losses\": 9.0, \"Winrate\": 36.0, \"KDA\": 5.3, \"Avg BT\": \"8.2\", \"GT\": \"33:09:00\", \"CSM\": 9.6, \"DPM\": 593.0, \"GPM\": 419.0, \"CSD@15\": 4.9, \"GD@15\": 83.0, \"XPD@15\": 248.0, \"PC1\": 152.67933412577858, \"PC2\": 155.00369143296928}, {\"Champion\": \"\\u00a0Rumble\", \"Picks\": 10, \"Bans\": 12, \"Presence\": 56.0, \"Wins\": 6.0, \"Losses\": 4.0, \"Winrate\": 60.0, \"KDA\": 4.1, \"Avg BT\": \"3.5\", \"GT\": \"33:53:00\", \"CSM\": 7.6, \"DPM\": 679.0, \"GPM\": 388.0, \"CSD@15\": 3.4, \"GD@15\": 251.0, \"XPD@15\": 487.0, \"PC1\": 443.8377991809839, \"PC2\": 214.1272220555246}, {\"Champion\": \"\\u00a0Leona\", \"Picks\": 16, \"Bans\": 5, \"Presence\": 54.0, \"Wins\": 11.0, \"Losses\": 5.0, \"Winrate\": 69.0, \"KDA\": 2.8, \"Avg BT\": \"9.4\", \"GT\": \"34:05:00\", \"CSM\": 1.1, \"DPM\": 189.0, \"GPM\": 246.0, \"CSD@15\": -1.8, \"GD@15\": -225.0, \"XPD@15\": -60.0, \"PC1\": -319.8816295983831, \"PC2\": 181.70287056749473}, {\"Champion\": \"\\u00a0Sejuani\", \"Picks\": 15, \"Bans\": 6, \"Presence\": 54.0, \"Wins\": 7.0, \"Losses\": 8.0, \"Winrate\": 47.0, \"KDA\": 3.4, \"Avg BT\": \"5.3\", \"GT\": \"33:11:00\", \"CSM\": 5.5, \"DPM\": 302.0, \"GPM\": 318.0, \"CSD@15\": -4.1, \"GD@15\": -36.0, \"XPD@15\": -181.0, \"PC1\": -250.2550432840539, \"PC2\": -47.89347726279206}, {\"Champion\": \"\\u00a0Orianna\", \"Picks\": 9, \"Bans\": 11, \"Presence\": 51.0, \"Wins\": 3.0, \"Losses\": 6.0, \"Winrate\": 33.0, \"KDA\": 3.5, \"Avg BT\": \"2.5\", \"GT\": \"33:47:00\", \"CSM\": 8.1, \"DPM\": 587.0, \"GPM\": 382.0, \"CSD@15\": 8.1, \"GD@15\": -45.0, \"XPD@15\": 139.0, \"PC1\": -15.866352282744131, \"PC2\": 162.18906233944875}, {\"Champion\": \"\\u00a0Renekton\", \"Picks\": 7, \"Bans\": 13, \"Presence\": 51.0, \"Wins\": 3.0, \"Losses\": 4.0, \"Winrate\": 43.0, \"KDA\": 2.0, \"Avg BT\": \"4.1\", \"GT\": \"36:41:00\", \"CSM\": 8.1, \"DPM\": 381.0, \"GPM\": 386.0, \"CSD@15\": 10.1, \"GD@15\": 123.0, \"XPD@15\": 470.0, \"PC1\": 311.2300740556268, \"PC2\": 316.09232408209107}, {\"Champion\": \"\\u00a0Smolder\", \"Picks\": 12, \"Bans\": 7, \"Presence\": 49.0, \"Wins\": 3.0, \"Losses\": 9.0, \"Winrate\": 25.0, \"KDA\": 2.8, \"Avg BT\": \"6.1\", \"GT\": \"33:15:00\", \"CSM\": 9.7, \"DPM\": 801.0, \"GPM\": 428.0, \"CSD@15\": -6.2, \"GD@15\": -269.0, \"XPD@15\": -399.0, \"PC1\": -521.2065377718839, \"PC2\": -113.44290248459657}, {\"Champion\": \"\\u00a0Ahri\", \"Picks\": 12, \"Bans\": 4, \"Presence\": 41.0, \"Wins\": 7.0, \"Losses\": 5.0, \"Winrate\": 58.0, \"KDA\": 6.7, \"Avg BT\": \"5.5\", \"GT\": \"35:04:00\", \"CSM\": 8.6, \"DPM\": 699.0, \"GPM\": 429.0, \"CSD@15\": -0.8, \"GD@15\": 157.0, \"XPD@15\": 97.0, \"PC1\": 116.07487720008328, \"PC2\": -18.45779302276611}, {\"Champion\": \"\\u00a0Ezreal\", \"Picks\": 5, \"Bans\": 11, \"Presence\": 41.0, \"Wins\": 2.0, \"Losses\": 3.0, \"Winrate\": 40.0, \"KDA\": 4.3, \"Avg BT\": \"7.8\", \"GT\": \"34:58:00\", \"CSM\": 10.0, \"DPM\": 832.0, \"GPM\": 445.0, \"CSD@15\": 6.8, \"GD@15\": -44.0, \"XPD@15\": -297.0, \"PC1\": -283.62216068283385, \"PC2\": -191.20754190308188}, {\"Champion\": \"\\u00a0Renata Glasc\", \"Picks\": 6, \"Bans\": 10, \"Presence\": 41.0, \"Wins\": 3.0, \"Losses\": 3.0, \"Winrate\": 50.0, \"KDA\": 3.3, \"Avg BT\": \"7.1\", \"GT\": \"34:55:00\", \"CSM\": 1.2, \"DPM\": 194.0, \"GPM\": 252.0, \"CSD@15\": -1.8, \"GD@15\": 215.0, \"XPD@15\": 404.0, \"PC1\": 315.3900893105274, \"PC2\": 235.82903388025073}, {\"Champion\": \"\\u00a0Maokai\", \"Picks\": 8, \"Bans\": 6, \"Presence\": 36.0, \"Wins\": 5.0, \"Losses\": 3.0, \"Winrate\": 63.0, \"KDA\": 3.7, \"Avg BT\": \"6.3\", \"GT\": \"33:20:00\", \"CSM\": 5.1, \"DPM\": 284.0, \"GPM\": 311.0, \"CSD@15\": -8.5, \"GD@15\": -555.0, \"XPD@15\": -318.0, \"PC1\": -726.1064152024984, \"PC2\": 192.48330962975692}, {\"Champion\": \"\\u00a0Nocturne\", \"Picks\": 10, \"Bans\": 4, \"Presence\": 36.0, \"Wins\": 5.0, \"Losses\": 5.0, \"Winrate\": 50.0, \"KDA\": 4.5, \"Avg BT\": \"6\", \"GT\": \"32:51:00\", \"CSM\": 6.5, \"DPM\": 330.0, \"GPM\": 352.0, \"CSD@15\": 5.2, \"GD@15\": 76.0, \"XPD@15\": -52.0, \"PC1\": -77.99723414319978, \"PC2\": -32.19356565644463}, {\"Champion\": \"\\u00a0Lucian\", \"Picks\": 3, \"Bans\": 9, \"Presence\": 31.0, \"Wins\": 0.0, \"Losses\": 3.0, \"Winrate\": 0.0, \"KDA\": 2.2, \"Avg BT\": \"5.6\", \"GT\": \"40:23:00\", \"CSM\": 8.6, \"DPM\": 667.0, \"GPM\": 384.0, \"CSD@15\": 2.7, \"GD@15\": -266.0, \"XPD@15\": -17.0, \"PC1\": -276.34952746924796, \"PC2\": 185.28669260130116}, {\"Champion\": \"\\u00a0Xayah\", \"Picks\": 5, \"Bans\": 7, \"Presence\": 31.0, \"Wins\": 2.0, \"Losses\": 3.0, \"Winrate\": 40.0, \"KDA\": 2.8, \"Avg BT\": \"9\", \"GT\": \"32:39:00\", \"CSM\": 10.4, \"DPM\": 670.0, \"GPM\": 460.0, \"CSD@15\": -1.0, \"GD@15\": 305.0, \"XPD@15\": 17.0, \"PC1\": 169.45988527471852, \"PC2\": -173.78905026085314}, {\"Champion\": \"\\u00a0Rakan\", \"Picks\": 6, \"Bans\": 6, \"Presence\": 31.0, \"Wins\": 1.0, \"Losses\": 5.0, \"Winrate\": 17.0, \"KDA\": 3.1, \"Avg BT\": \"8.3\", \"GT\": \"30:42:00\", \"CSM\": 1.3, \"DPM\": 132.0, \"GPM\": 239.0, \"CSD@15\": -0.3, \"GD@15\": -101.0, \"XPD@15\": 199.0, \"PC1\": -60.895124128144985, \"PC2\": 300.6588285873345}, {\"Champion\": \"\\u00a0Alistar\", \"Picks\": 5, \"Bans\": 6, \"Presence\": 28.0, \"Wins\": 0.0, \"Losses\": 5.0, \"Winrate\": 0.0, \"KDA\": 1.2, \"Avg BT\": \"8.8\", \"GT\": \"32:13:00\", \"CSM\": 1.1, \"DPM\": 114.0, \"GPM\": 209.0, \"CSD@15\": 4.6, \"GD@15\": -116.0, \"XPD@15\": -13.0, \"PC1\": -216.16812213641458, \"PC2\": 159.0087255105031}, {\"Champion\": \"\\u00a0KSante\", \"Picks\": 6, \"Bans\": 5, \"Presence\": 28.0, \"Wins\": 2.0, \"Losses\": 4.0, \"Winrate\": 33.0, \"KDA\": 2.9, \"Avg BT\": \"6.8\", \"GT\": \"31:35:00\", \"CSM\": 7.1, \"DPM\": 359.0, \"GPM\": 361.0, \"CSD@15\": 0.2, \"GD@15\": 336.0, \"XPD@15\": 399.0, \"PC1\": 418.0495216442514, \"PC2\": 127.86319969474411}, {\"Champion\": \"\\u00a0Ivern\", \"Picks\": 3, \"Bans\": 7, \"Presence\": 26.0, \"Wins\": 2.0, \"Losses\": 1.0, \"Winrate\": 67.0, \"KDA\": 6.2, \"Avg BT\": \"2.7\", \"GT\": \"39:05:00\", \"CSM\": 5.9, \"DPM\": 176.0, \"GPM\": 341.0, \"CSD@15\": 0.3, \"GD@15\": 366.0, \"XPD@15\": -174.0, \"PC1\": 40.22886184204992, \"PC2\": -298.17243998167464}, {\"Champion\": \"\\u00a0Nautilus\", \"Picks\": 5, \"Bans\": 3, \"Presence\": 21.0, \"Wins\": 2.0, \"Losses\": 3.0, \"Winrate\": 40.0, \"KDA\": 1.6, \"Avg BT\": \"9\", \"GT\": \"29:08:00\", \"CSM\": 1.2, \"DPM\": 199.0, \"GPM\": 248.0, \"CSD@15\": 1.2, \"GD@15\": 33.0, \"XPD@15\": -501.0, \"PC1\": -424.1417683537635, \"PC2\": -314.2068105944379}, {\"Champion\": \"\\u00a0Akali\", \"Picks\": 5, \"Bans\": 2, \"Presence\": 18.0, \"Wins\": 0.0, \"Losses\": 5.0, \"Winrate\": 0.0, \"KDA\": 0.9, \"Avg BT\": \"3\", \"GT\": \"27:54:00\", \"CSM\": 8.2, \"DPM\": 444.0, \"GPM\": 352.0, \"CSD@15\": -7.0, \"GD@15\": -1107.0, \"XPD@15\": -351.0, \"PC1\": -1140.5587092950543, \"PC2\": 514.7298654635447}, {\"Champion\": \"\\u00a0Braum\", \"Picks\": 4, \"Bans\": 3, \"Presence\": 18.0, \"Wins\": 4.0, \"Losses\": 0.0, \"Winrate\": 100.0, \"KDA\": 6.6, \"Avg BT\": \"6.7\", \"GT\": \"35:12:00\", \"CSM\": 1.1, \"DPM\": 189.0, \"GPM\": 263.0, \"CSD@15\": 2.8, \"GD@15\": 617.0, \"XPD@15\": 536.0, \"PC1\": 700.4642288537167, \"PC2\": 65.47134417528417}, {\"Champion\": \"\\u00a0Neeko\", \"Picks\": 5, \"Bans\": 2, \"Presence\": 18.0, \"Wins\": 2.0, \"Losses\": 3.0, \"Winrate\": 40.0, \"KDA\": 3.2, \"Avg BT\": \"6\", \"GT\": \"30:45:00\", \"CSM\": 5.3, \"DPM\": 494.0, \"GPM\": 336.0, \"CSD@15\": 10.0, \"GD@15\": 693.0, \"XPD@15\": 568.0, \"PC1\": 806.1437924370176, \"PC2\": 6.727794565004913}, {\"Champion\": \"\\u00a0Tristana\", \"Picks\": 3, \"Bans\": 3, \"Presence\": 15.0, \"Wins\": 1.0, \"Losses\": 2.0, \"Winrate\": 33.0, \"KDA\": 3.5, \"Avg BT\": \"7.7\", \"GT\": \"32:16:00\", \"CSM\": 8.9, \"DPM\": 639.0, \"GPM\": 430.0, \"CSD@15\": -10.7, \"GD@15\": -434.0, \"XPD@15\": -508.0, \"PC1\": -730.1893032568719, \"PC2\": -71.36817908881793}, {\"Champion\": \"\\u00a0Brand\", \"Picks\": 1, \"Bans\": 4, \"Presence\": 13.0, \"Wins\": 1.0, \"Losses\": 0.0, \"Winrate\": 100.0, \"KDA\": 8.0, \"Avg BT\": \"4\", \"GT\": \"33:28:00\", \"CSM\": 7.7, \"DPM\": 845.0, \"GPM\": 430.0, \"CSD@15\": 30.0, \"GD@15\": 1976.0, \"XPD@15\": 1292.0, \"PC1\": 2270.7023045617307, \"PC2\": -346.29593118723983}, {\"Champion\": \"\\u00a0LeBlanc\", \"Picks\": 1, \"Bans\": 4, \"Presence\": 13.0, \"Wins\": 1.0, \"Losses\": 0.0, \"Winrate\": 100.0, \"KDA\": 14.0, \"Avg BT\": \"5.3\", \"GT\": \"35:36:00\", \"CSM\": 8.4, \"DPM\": 1058.0, \"GPM\": 434.0, \"CSD@15\": 12.0, \"GD@15\": 120.0, \"XPD@15\": 570.0, \"PC1\": 438.36548193990905, \"PC2\": 316.9200425160773}, {\"Champion\": \"\\u00a0Miss Fortune\", \"Picks\": 4, \"Bans\": 1, \"Presence\": 13.0, \"Wins\": 3.0, \"Losses\": 1.0, \"Winrate\": 75.0, \"KDA\": 5.9, \"Avg BT\": \"10\", \"GT\": \"34:29:00\", \"CSM\": 9.7, \"DPM\": 885.0, \"GPM\": 487.0, \"CSD@15\": 4.2, \"GD@15\": 507.0, \"XPD@15\": 102.0, \"PC1\": 395.5490501493456, \"PC2\": -269.5352660781199}, {\"Champion\": \"\\u00a0Syndra\", \"Picks\": 3, \"Bans\": 2, \"Presence\": 13.0, \"Wins\": 0.0, \"Losses\": 3.0, \"Winrate\": 0.0, \"KDA\": 2.1, \"Avg BT\": \"8\", \"GT\": \"34:06:00\", \"CSM\": 7.6, \"DPM\": 554.0, \"GPM\": 380.0, \"CSD@15\": -5.3, \"GD@15\": -533.0, \"XPD@15\": -424.0, \"PC1\": -755.8540218880268, \"PC2\": 70.42842336868259}, {\"Champion\": \"\\u00a0Wukong\", \"Picks\": 4, \"Bans\": 1, \"Presence\": 13.0, \"Wins\": 2.0, \"Losses\": 2.0, \"Winrate\": 50.0, \"KDA\": 3.3, \"Avg BT\": \"5\", \"GT\": \"32:14:00\", \"CSM\": 5.9, \"DPM\": 392.0, \"GPM\": 352.0, \"CSD@15\": 0.5, \"GD@15\": 376.0, \"XPD@15\": -42.0, \"PC1\": 155.37844466736274, \"PC2\": -228.5599956649361}, {\"Champion\": \"\\u00a0Zyra\", \"Picks\": 3, \"Bans\": 2, \"Presence\": 13.0, \"Wins\": 0.0, \"Losses\": 3.0, \"Winrate\": 0.0, \"KDA\": 2.4, \"Avg BT\": \"5\", \"GT\": \"35:29:00\", \"CSM\": 6.8, \"DPM\": 656.0, \"GPM\": 358.0, \"CSD@15\": 22.7, \"GD@15\": 437.0, \"XPD@15\": 773.0, \"PC1\": 769.3442167146795, \"PC2\": 311.15068616439765}, {\"Champion\": \"\\u00a0Sylas\", \"Picks\": 4, \"Bans\": 1, \"Presence\": 13.0, \"Wins\": 4.0, \"Losses\": 0.0, \"Winrate\": 100.0, \"KDA\": 4.9, \"Avg BT\": \"8\", \"GT\": \"33:47:00\", \"CSM\": 8.5, \"DPM\": 548.0, \"GPM\": 437.0, \"CSD@15\": -7.5, \"GD@15\": 188.0, \"XPD@15\": -145.0, \"PC1\": -36.00556470972778, \"PC2\": -207.00615126084958}, {\"Champion\": \"\\u00a0Cassiopeia\", \"Picks\": 3, \"Bans\": 1, \"Presence\": 10.0, \"Wins\": 1.0, \"Losses\": 2.0, \"Winrate\": 33.0, \"KDA\": 2.4, \"Avg BT\": \"3\", \"GT\": \"36:09:00\", \"CSM\": 8.7, \"DPM\": 467.0, \"GPM\": 378.0, \"CSD@15\": -1.0, \"GD@15\": -573.0, \"XPD@15\": -462.0, \"PC1\": -818.199858460252, \"PC2\": 75.29983774754606}, {\"Champion\": \"\\u00a0Olaf\", \"Picks\": 3, \"Bans\": 1, \"Presence\": 10.0, \"Wins\": 1.0, \"Losses\": 2.0, \"Winrate\": 33.0, \"KDA\": 1.6, \"Avg BT\": \"8\", \"GT\": \"33:13:00\", \"CSM\": 7.8, \"DPM\": 621.0, \"GPM\": 393.0, \"CSD@15\": -20.7, \"GD@15\": -861.0, \"XPD@15\": -986.0, \"PC1\": -1367.3173709147488, \"PC2\": -139.8985871970128}, {\"Champion\": \"\\u00a0Amumu\", \"Picks\": 2, \"Bans\": 1, \"Presence\": 8.0, \"Wins\": 0.0, \"Losses\": 2.0, \"Winrate\": 0.0, \"KDA\": 2.2, \"Avg BT\": \"8\", \"GT\": \"33:27:00\", \"CSM\": 6.2, \"DPM\": 525.0, \"GPM\": 327.0, \"CSD@15\": 23.5, \"GD@15\": -110.0, \"XPD@15\": 597.0, \"PC1\": 235.99590684590956, \"PC2\": 555.5905761325517}, {\"Champion\": \"\\u00a0Draven\", \"Picks\": 2, \"Bans\": 1, \"Presence\": 8.0, \"Wins\": 1.0, \"Losses\": 1.0, \"Winrate\": 50.0, \"KDA\": 2.5, \"Avg BT\": \"9\", \"GT\": \"26:36:00\", \"CSM\": 9.1, \"DPM\": 573.0, \"GPM\": 512.0, \"CSD@15\": -11.0, \"GD@15\": 1220.0, \"XPD@15\": -90.0, \"PC1\": 764.6519069567388, \"PC2\": -850.0705027781197}, {\"Champion\": \"\\u00a0Galio\", \"Picks\": 3, \"Bans\": 0, \"Presence\": 8.0, \"Wins\": 2.0, \"Losses\": 1.0, \"Winrate\": 67.0, \"KDA\": 4.6, \"Avg BT\": \"-\", \"GT\": \"35:48:00\", \"CSM\": 7.4, \"DPM\": 477.0, \"GPM\": 370.0, \"CSD@15\": 2.7, \"GD@15\": 662.0, \"XPD@15\": 235.0, \"PC1\": 559.7917832990083, \"PC2\": -222.48391415764584}, {\"Champion\": \"\\u00a0Varus\", \"Picks\": 3, \"Bans\": 0, \"Presence\": 8.0, \"Wins\": 0.0, \"Losses\": 3.0, \"Winrate\": 0.0, \"KDA\": 1.6, \"Avg BT\": \"-\", \"GT\": \"36:25:00\", \"CSM\": 9.2, \"DPM\": 439.0, \"GPM\": 403.0, \"CSD@15\": 2.7, \"GD@15\": -278.0, \"XPD@15\": -398.0, \"PC1\": -560.2506583852589, \"PC2\": -68.47879946266565}, {\"Champion\": \"\\u00a0Yasuo\", \"Picks\": 2, \"Bans\": 1, \"Presence\": 8.0, \"Wins\": 1.0, \"Losses\": 1.0, \"Winrate\": 50.0, \"KDA\": 3.1, \"Avg BT\": \"7\", \"GT\": \"35:36:00\", \"CSM\": 8.4, \"DPM\": 423.0, \"GPM\": 419.0, \"CSD@15\": 2.0, \"GD@15\": 408.0, \"XPD@15\": 632.0, \"PC1\": 634.1948888312518, \"PC2\": 240.2045691372998}, {\"Champion\": \"\\u00a0Jarvan IV\", \"Picks\": 1, \"Bans\": 1, \"Presence\": 5.0, \"Wins\": 1.0, \"Losses\": 0.0, \"Winrate\": 100.0, \"KDA\": 6.3, \"Avg BT\": \"5\", \"GT\": \"33:07:00\", \"CSM\": 6.2, \"DPM\": 397.0, \"GPM\": 411.0, \"CSD@15\": -28.0, \"GD@15\": -563.0, \"XPD@15\": -964.0, \"PC1\": -1152.024648243085, \"PC2\": -303.1007775242557}, {\"Champion\": \"\\u00a0Jinx\", \"Picks\": 1, \"Bans\": 1, \"Presence\": 5.0, \"Wins\": 0.0, \"Losses\": 1.0, \"Winrate\": 0.0, \"KDA\": 4.5, \"Avg BT\": \"3\", \"GT\": \"45:13:00\", \"CSM\": 10.1, \"DPM\": 685.0, \"GPM\": 422.0, \"CSD@15\": 19.0, \"GD@15\": 315.0, \"XPD@15\": 1046.0, \"PC1\": 865.9650024220321, \"PC2\": 584.6799825809917}, {\"Champion\": \"\\u00a0Kennen\", \"Picks\": 2, \"Bans\": 0, \"Presence\": 5.0, \"Wins\": 1.0, \"Losses\": 1.0, \"Winrate\": 50.0, \"KDA\": 4.8, \"Avg BT\": \"-\", \"GT\": \"38:42:00\", \"CSM\": 8.0, \"DPM\": 719.0, \"GPM\": 390.0, \"CSD@15\": 11.5, \"GD@15\": -14.0, \"XPD@15\": -280.0, \"PC1\": -261.1392647938135, \"PC2\": -183.99356573935253}, {\"Champion\": \"\\u00a0Nami\", \"Picks\": 1, \"Bans\": 1, \"Presence\": 5.0, \"Wins\": 0.0, \"Losses\": 1.0, \"Winrate\": 0.0, \"KDA\": 12.0, \"Avg BT\": \"8\", \"GT\": \"42:14:00\", \"CSM\": 1.1, \"DPM\": 259.0, \"GPM\": 217.0, \"CSD@15\": 3.0, \"GD@15\": 116.0, \"XPD@15\": 20.0, \"PC1\": -9.879358042337572, \"PC2\": 15.454021216249572}, {\"Champion\": \"\\u00a0Sion\", \"Picks\": 2, \"Bans\": 0, \"Presence\": 5.0, \"Wins\": 1.0, \"Losses\": 1.0, \"Winrate\": 50.0, \"KDA\": 1.4, \"Avg BT\": \"-\", \"GT\": \"29:11:00\", \"CSM\": 8.2, \"DPM\": 377.0, \"GPM\": 348.0, \"CSD@15\": 25.5, \"GD@15\": 789.0, \"XPD@15\": 272.0, \"PC1\": 668.8580232661559, \"PC2\": -265.5611073595543}, {\"Champion\": \"\\u00a0Darius\", \"Picks\": 1, \"Bans\": 0, \"Presence\": 3.0, \"Wins\": 0.0, \"Losses\": 1.0, \"Winrate\": 0.0, \"KDA\": 1.3, \"Avg BT\": \"-\", \"GT\": \"33:28:00\", \"CSM\": 7.6, \"DPM\": 414.0, \"GPM\": 348.0, \"CSD@15\": -15.0, \"GD@15\": -952.0, \"XPD@15\": -1226.0, \"PC1\": -1614.7688016223717, \"PC2\": -231.61843554522366}, {\"Champion\": \"\\u00a0Gragas\", \"Picks\": 1, \"Bans\": 0, \"Presence\": 3.0, \"Wins\": 1.0, \"Losses\": 0.0, \"Winrate\": 100.0, \"KDA\": 14.0, \"Avg BT\": \"-\", \"GT\": \"28:08:00\", \"CSM\": 8.0, \"DPM\": 500.0, \"GPM\": 428.0, \"CSD@15\": 3.0, \"GD@15\": 477.0, \"XPD@15\": 355.0, \"PC1\": 507.3239551868817, \"PC2\": -21.558975615183527}, {\"Champion\": \"\\u00a0Jayce\", \"Picks\": 1, \"Bans\": 0, \"Presence\": 3.0, \"Wins\": 1.0, \"Losses\": 0.0, \"Winrate\": 100.0, \"KDA\": 7.0, \"Avg BT\": \"-\", \"GT\": \"28:09:00\", \"CSM\": 8.2, \"DPM\": 1063.0, \"GPM\": 478.0, \"CSD@15\": 27.0, \"GD@15\": 1544.0, \"XPD@15\": 1302.0, \"PC1\": 1979.4483160451832, \"PC2\": -81.00717537610998}, {\"Champion\": \"\\u00a0Nunu\", \"Picks\": 1, \"Bans\": 0, \"Presence\": 3.0, \"Wins\": 1.0, \"Losses\": 0.0, \"Winrate\": 100.0, \"KDA\": 21.0, \"Avg BT\": \"-\", \"GT\": \"37:44:00\", \"CSM\": 6.8, \"DPM\": 398.0, \"GPM\": 403.0, \"CSD@15\": -24.0, \"GD@15\": -1259.0, \"XPD@15\": -1260.0, \"PC1\": -1863.181358198082, \"PC2\": -64.47684902647899}, {\"Champion\": \"\\u00a0Twitch\", \"Picks\": 1, \"Bans\": 0, \"Presence\": 3.0, \"Wins\": 1.0, \"Losses\": 0.0, \"Winrate\": 100.0, \"KDA\": 17.0, \"Avg BT\": \"-\", \"GT\": \"33:11:00\", \"CSM\": 9.8, \"DPM\": 940.0, \"GPM\": 498.0, \"CSD@15\": -15.0, \"GD@15\": 323.0, \"XPD@15\": 57.0, \"PC1\": 235.01372619279394, \"PC2\": -190.37849906421624}, {\"Champion\": \"\\u00a0Urgot\", \"Picks\": 1, \"Bans\": 0, \"Presence\": 3.0, \"Wins\": 0.0, \"Losses\": 1.0, \"Winrate\": 0.0, \"KDA\": 2.3, \"Avg BT\": \"-\", \"GT\": \"33:26:00\", \"CSM\": 10.2, \"DPM\": 640.0, \"GPM\": 474.0, \"CSD@15\": 20.0, \"GD@15\": 445.0, \"XPD@15\": 613.0, \"PC1\": 668.9926452978003, \"PC2\": 178.92322159644135}, {\"Champion\": \"\\u00a0Xin Zhao\", \"Picks\": 1, \"Bans\": 0, \"Presence\": 3.0, \"Wins\": 1.0, \"Losses\": 0.0, \"Winrate\": 100.0, \"KDA\": 11.0, \"Avg BT\": \"-\", \"GT\": \"32:48:00\", \"CSM\": 7.2, \"DPM\": 341.0, \"GPM\": 383.0, \"CSD@15\": 2.0, \"GD@15\": 647.0, \"XPD@15\": 14.0, \"PC1\": 389.23830413530834, \"PC2\": -366.0130715593151}, {\"Champion\": \"\\u00a0Camille\", \"Picks\": 1, \"Bans\": 0, \"Presence\": 3.0, \"Wins\": 1.0, \"Losses\": 0.0, \"Winrate\": 100.0, \"KDA\": 6.5, \"Avg BT\": \"-\", \"GT\": \"39:50:00\", \"CSM\": 8.8, \"DPM\": 554.0, \"GPM\": 466.0, \"CSD@15\": 15.0, \"GD@15\": 821.0, \"XPD@15\": 448.0, \"PC1\": 828.8781559132289, \"PC2\": -187.0454114718776}, {\"Champion\": \"\\u00a0Lillia\", \"Picks\": 1, \"Bans\": 0, \"Presence\": 3.0, \"Wins\": 0.0, \"Losses\": 1.0, \"Winrate\": 0.0, \"KDA\": 4.0, \"Avg BT\": \"-\", \"GT\": \"45:40:00\", \"CSM\": 6.7, \"DPM\": 386.0, \"GPM\": 347.0, \"CSD@15\": -7.0, \"GD@15\": -865.0, \"XPD@15\": -495.0, \"PC1\": -1063.8295344661483, \"PC2\": 254.99237127752332}, {\"Champion\": \"\\u00a0Hwei\", \"Picks\": 1, \"Bans\": 0, \"Presence\": 3.0, \"Wins\": 1.0, \"Losses\": 0.0, \"Winrate\": 100.0, \"KDA\": 19.0, \"Avg BT\": \"-\", \"GT\": \"37:44:00\", \"CSM\": 7.2, \"DPM\": 778.0, \"GPM\": 442.0, \"CSD@15\": -11.0, \"GD@15\": -26.0, \"XPD@15\": -727.0, \"PC1\": -562.5532838925122, \"PC2\": -520.4521593031309}]}}, {\"mode\": \"vega-lite\"});\n",
              "</script>"
            ],
            "text/plain": [
              "alt.Chart(...)"
            ]
          },
          "metadata": {},
          "execution_count": 24
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Utilisons cette fois des données plus claires sur des champions picks au moins 4x\n"
      ],
      "metadata": {
        "id": "YwJGtogWDJ35"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "df_3=df.copy()\n",
        "df_3=df_3.drop(['CSD@15','GD@15','XPD@15','KDA','Avg BT','GT','Presence','Wins','Losses'], axis=1) #On vire les stats qui ne sont pas intéressantes pour une PCA\n",
        "df_3=df_3[df_3['Picks']>=4] #On vire les champions dont les données n'ont pas suffisamment de représentation.\n",
        "#into the matrix\n",
        "#tjr le pb des noms de champion, on le vire puis on va re-label par la suite avec altair.\n",
        "df_4=df_3.drop('Champion', axis=1)\n",
        "matrix2=df_4.to_numpy()\n"
      ],
      "metadata": {
        "id": "bsfcbxtODPW6"
      },
      "execution_count": 25,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "pca2=decomposition.PCA(n_components=2)\n",
        "pca.fit(matrix2)\n",
        "print(pca.explained_variance_ratio_)\n",
        "print(pca.singular_values_)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "EswmQCSmFRJ8",
        "outputId": "d5ca1549-4f0c-4344-a78c-977def9d68ec"
      },
      "execution_count": 26,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[0.97704418 0.01434252]\n",
            "[1400.26984747  169.65525516]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "to_plot2=pca.transform(matrix2)\n",
        "to_plot2.shape"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Yt4rDwERFczh",
        "outputId": "29a969b8-bdea-4215-f708-031ebc272034"
      },
      "execution_count": 27,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(35, 2)"
            ]
          },
          "metadata": {},
          "execution_count": 27
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#plt.scatter(x=to_plot2[:,0], y=to_plot2[:,1])\n",
        "df_plot2=df_3.copy()\n",
        "df_plot2['PC1']=to_plot2[:,0]\n",
        "df_plot2['PC2']=to_plot2[:,1]\n",
        "\n",
        "alt.Chart(df_plot2).mark_point().encode(\n",
        "    x=alt.X('PC1',title='PC1 (97%)'),\n",
        "    y=alt.X('PC2',title='PC2 (3%)'),\n",
        "    tooltip=['Champion','Winrate','Picks','Bans','GPM','DPM','CSM'],\n",
        "    color=alt.Color('Winrate', scale=alt.Scale(scheme='turbo'))\n",
        ")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 363
        },
        "id": "dBSrA_RhFj8U",
        "outputId": "424928c4-d754-49ec-e142-b271ff79d857"
      },
      "execution_count": 28,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "\n",
              "<style>\n",
              "  #altair-viz-b910efe9186e484a9c21e2a08366e08a.vega-embed {\n",
              "    width: 100%;\n",
              "    display: flex;\n",
              "  }\n",
              "\n",
              "  #altair-viz-b910efe9186e484a9c21e2a08366e08a.vega-embed details,\n",
              "  #altair-viz-b910efe9186e484a9c21e2a08366e08a.vega-embed details summary {\n",
              "    position: relative;\n",
              "  }\n",
              "</style>\n",
              "<div id=\"altair-viz-b910efe9186e484a9c21e2a08366e08a\"></div>\n",
              "<script type=\"text/javascript\">\n",
              "  var VEGA_DEBUG = (typeof VEGA_DEBUG == \"undefined\") ? {} : VEGA_DEBUG;\n",
              "  (function(spec, embedOpt){\n",
              "    let outputDiv = document.currentScript.previousElementSibling;\n",
              "    if (outputDiv.id !== \"altair-viz-b910efe9186e484a9c21e2a08366e08a\") {\n",
              "      outputDiv = document.getElementById(\"altair-viz-b910efe9186e484a9c21e2a08366e08a\");\n",
              "    }\n",
              "\n",
              "    const paths = {\n",
              "      \"vega\": \"https://cdn.jsdelivr.net/npm/vega@5?noext\",\n",
              "      \"vega-lib\": \"https://cdn.jsdelivr.net/npm/vega-lib?noext\",\n",
              "      \"vega-lite\": \"https://cdn.jsdelivr.net/npm/vega-lite@5.20.1?noext\",\n",
              "      \"vega-embed\": \"https://cdn.jsdelivr.net/npm/vega-embed@6?noext\",\n",
              "    };\n",
              "\n",
              "    function maybeLoadScript(lib, version) {\n",
              "      var key = `${lib.replace(\"-\", \"\")}_version`;\n",
              "      return (VEGA_DEBUG[key] == version) ?\n",
              "        Promise.resolve(paths[lib]) :\n",
              "        new Promise(function(resolve, reject) {\n",
              "          var s = document.createElement('script');\n",
              "          document.getElementsByTagName(\"head\")[0].appendChild(s);\n",
              "          s.async = true;\n",
              "          s.onload = () => {\n",
              "            VEGA_DEBUG[key] = version;\n",
              "            return resolve(paths[lib]);\n",
              "          };\n",
              "          s.onerror = () => reject(`Error loading script: ${paths[lib]}`);\n",
              "          s.src = paths[lib];\n",
              "        });\n",
              "    }\n",
              "\n",
              "    function showError(err) {\n",
              "      outputDiv.innerHTML = `<div class=\"error\" style=\"color:red;\">${err}</div>`;\n",
              "      throw err;\n",
              "    }\n",
              "\n",
              "    function displayChart(vegaEmbed) {\n",
              "      vegaEmbed(outputDiv, spec, embedOpt)\n",
              "        .catch(err => showError(`Javascript Error: ${err.message}<br>This usually means there's a typo in your chart specification. See the javascript console for the full traceback.`));\n",
              "    }\n",
              "\n",
              "    if(typeof define === \"function\" && define.amd) {\n",
              "      requirejs.config({paths});\n",
              "      let deps = [\"vega-embed\"];\n",
              "      require(deps, displayChart, err => showError(`Error loading script: ${err.message}`));\n",
              "    } else {\n",
              "      maybeLoadScript(\"vega\", \"5\")\n",
              "        .then(() => maybeLoadScript(\"vega-lite\", \"5.20.1\"))\n",
              "        .then(() => maybeLoadScript(\"vega-embed\", \"6\"))\n",
              "        .catch(showError)\n",
              "        .then(() => displayChart(vegaEmbed));\n",
              "    }\n",
              "  })({\"config\": {\"view\": {\"continuousWidth\": 300, \"continuousHeight\": 300}}, \"data\": {\"name\": \"data-006ab3aabe77052de5dfef44d6beb7f2\"}, \"mark\": {\"type\": \"point\"}, \"encoding\": {\"color\": {\"field\": \"Winrate\", \"scale\": {\"scheme\": \"turbo\"}, \"type\": \"quantitative\"}, \"tooltip\": [{\"field\": \"Champion\", \"type\": \"nominal\"}, {\"field\": \"Winrate\", \"type\": \"quantitative\"}, {\"field\": \"Picks\", \"type\": \"quantitative\"}, {\"field\": \"Bans\", \"type\": \"quantitative\"}, {\"field\": \"GPM\", \"type\": \"quantitative\"}, {\"field\": \"DPM\", \"type\": \"quantitative\"}, {\"field\": \"CSM\", \"type\": \"quantitative\"}], \"x\": {\"field\": \"PC1\", \"title\": \"PC1 (97%)\", \"type\": \"quantitative\"}, \"y\": {\"field\": \"PC2\", \"title\": \"PC2 (3%)\", \"type\": \"quantitative\"}}, \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.20.1.json\", \"datasets\": {\"data-006ab3aabe77052de5dfef44d6beb7f2\": [{\"Champion\": \"\\u00a0Aurora\", \"Picks\": 9, \"Bans\": 30, \"Winrate\": 78.0, \"CSM\": 7.9, \"DPM\": 678.0, \"GPM\": 402.0, \"PC1\": 209.59684143620007, \"PC2\": -16.95234792963845}, {\"Champion\": \"\\u00a0Yone\", \"Picks\": 18, \"Bans\": 19, \"Winrate\": 72.0, \"CSM\": 9.6, \"DPM\": 711.0, \"GPM\": 451.0, \"PC1\": 256.0852207327521, \"PC2\": 13.171939072301484}, {\"Champion\": \"\\u00a0Rell\", \"Picks\": 26, \"Bans\": 5, \"Winrate\": 58.0, \"CSM\": 1.0, \"DPM\": 144.0, \"GPM\": 247.0, \"PC1\": -346.62450820447987, \"PC2\": -1.7017689379067917}, {\"Champion\": \"\\u00a0Jax\", \"Picks\": 15, \"Bans\": 15, \"Winrate\": 40.0, \"CSM\": 7.8, \"DPM\": 403.0, \"GPM\": 396.0, \"PC1\": -54.2173345574314, \"PC2\": 42.911371996187995}, {\"Champion\": \"\\u00a0Skarner\", \"Picks\": 13, \"Bans\": 17, \"Winrate\": 54.0, \"CSM\": 5.8, \"DPM\": 372.0, \"GPM\": 332.0, \"PC1\": -103.44557249214586, \"PC2\": 2.6927987525729122}, {\"Champion\": \"\\u00a0Ziggs\", \"Picks\": 5, \"Bans\": 24, \"Winrate\": 40.0, \"CSM\": 9.7, \"DPM\": 735.0, \"GPM\": 451.0, \"PC1\": 278.27020650478096, \"PC2\": -7.435970396035827}, {\"Champion\": \"\\u00a0Ashe\", \"Picks\": 5, \"Bans\": 23, \"Winrate\": 60.0, \"CSM\": 9.7, \"DPM\": 654.0, \"GPM\": 457.0, \"PC1\": 203.67375079730186, \"PC2\": 29.813928011422064}, {\"Champion\": \"\\u00a0Gnar\", \"Picks\": 17, \"Bans\": 11, \"Winrate\": 65.0, \"CSM\": 8.0, \"DPM\": 520.0, \"GPM\": 402.0, \"PC1\": 59.187598161697224, \"PC2\": 24.084520085548178}, {\"Champion\": \"\\u00a0Kaisa\", \"Picks\": 18, \"Bans\": 10, \"Winrate\": 56.0, \"CSM\": 10.0, \"DPM\": 792.0, \"GPM\": 472.0, \"PC1\": 339.15013879940534, \"PC2\": 0.7122135976647144}, {\"Champion\": \"\\u00a0Poppy\", \"Picks\": 9, \"Bans\": 17, \"Winrate\": 22.0, \"CSM\": 2.6, \"DPM\": 256.0, \"GPM\": 261.0, \"PC1\": -236.51740181773897, \"PC2\": -37.76877803131595}, {\"Champion\": \"\\u00a0Kalista\", \"Picks\": 11, \"Bans\": 15, \"Winrate\": 82.0, \"CSM\": 9.1, \"DPM\": 605.0, \"GPM\": 447.0, \"PC1\": 154.3904853121942, \"PC2\": 44.79136354811902}, {\"Champion\": \"\\u00a0Vi\", \"Picks\": 15, \"Bans\": 9, \"Winrate\": 47.0, \"CSM\": 6.1, \"DPM\": 295.0, \"GPM\": 345.0, \"PC1\": -172.66308200122847, \"PC2\": 33.56980495576636}, {\"Champion\": \"\\u00a0Jhin\", \"Picks\": 14, \"Bans\": 9, \"Winrate\": 36.0, \"CSM\": 9.6, \"DPM\": 593.0, \"GPM\": 419.0, \"PC1\": 133.22071688150686, \"PC2\": 5.172257876375852}, {\"Champion\": \"\\u00a0Rumble\", \"Picks\": 10, \"Bans\": 12, \"Winrate\": 60.0, \"CSM\": 7.6, \"DPM\": 679.0, \"GPM\": 388.0, \"PC1\": 205.6129523106215, \"PC2\": -36.93015890899653}, {\"Champion\": \"\\u00a0Leona\", \"Picks\": 16, \"Bans\": 5, \"Winrate\": 69.0, \"CSM\": 1.1, \"DPM\": 189.0, \"GPM\": 246.0, \"PC1\": -303.99240316652214, \"PC2\": -11.47127448761006}, {\"Champion\": \"\\u00a0Sejuani\", \"Picks\": 15, \"Bans\": 6, \"Winrate\": 47.0, \"CSM\": 5.5, \"DPM\": 302.0, \"GPM\": 318.0, \"PC1\": -174.5286784346111, \"PC2\": 8.240452973881048}, {\"Champion\": \"\\u00a0Orianna\", \"Picks\": 9, \"Bans\": 11, \"Winrate\": 33.0, \"CSM\": 8.1, \"DPM\": 587.0, \"GPM\": 382.0, \"PC1\": 115.8565781436863, \"PC2\": -26.285246496979255}, {\"Champion\": \"\\u00a0Renekton\", \"Picks\": 7, \"Bans\": 13, \"Winrate\": 43.0, \"CSM\": 8.1, \"DPM\": 381.0, \"GPM\": 386.0, \"PC1\": -78.18269511716949, \"PC2\": 41.80291666072742}, {\"Champion\": \"\\u00a0Smolder\", \"Picks\": 12, \"Bans\": 7, \"Winrate\": 25.0, \"CSM\": 9.7, \"DPM\": 801.0, \"GPM\": 428.0, \"PC1\": 333.2230718919743, \"PC2\": -52.836038424038065}, {\"Champion\": \"\\u00a0Ahri\", \"Picks\": 12, \"Bans\": 4, \"Winrate\": 58.0, \"CSM\": 8.6, \"DPM\": 699.0, \"GPM\": 429.0, \"PC1\": 237.35936016944822, \"PC2\": -8.374951367260081}, {\"Champion\": \"\\u00a0Ezreal\", \"Picks\": 5, \"Bans\": 11, \"Winrate\": 40.0, \"CSM\": 10.0, \"DPM\": 832.0, \"GPM\": 445.0, \"PC1\": 368.3353677487827, \"PC2\": -41.22531107781461}, {\"Champion\": \"\\u00a0Renata Glasc\", \"Picks\": 6, \"Bans\": 10, \"Winrate\": 50.0, \"CSM\": 1.2, \"DPM\": 194.0, \"GPM\": 252.0, \"PC1\": -297.6948152293663, \"PC2\": -15.864282643497233}, {\"Champion\": \"\\u00a0Maokai\", \"Picks\": 8, \"Bans\": 6, \"Winrate\": 63.0, \"CSM\": 5.1, \"DPM\": 284.0, \"GPM\": 311.0, \"PC1\": -193.48133730228147, \"PC2\": 13.957899758933337}, {\"Champion\": \"\\u00a0Nocturne\", \"Picks\": 10, \"Bans\": 4, \"Winrate\": 50.0, \"CSM\": 6.5, \"DPM\": 330.0, \"GPM\": 352.0, \"PC1\": -137.22205690044422, \"PC2\": 30.383526562252257}, {\"Champion\": \"\\u00a0Xayah\", \"Picks\": 5, \"Bans\": 7, \"Winrate\": 40.0, \"CSM\": 10.4, \"DPM\": 670.0, \"GPM\": 460.0, \"PC1\": 219.25322724551324, \"PC2\": 19.245861172294383}, {\"Champion\": \"\\u00a0Rakan\", \"Picks\": 6, \"Bans\": 6, \"Winrate\": 17.0, \"CSM\": 1.3, \"DPM\": 132.0, \"GPM\": 239.0, \"PC1\": -361.33071096322897, \"PC2\": -22.56271065365368}, {\"Champion\": \"\\u00a0Alistar\", \"Picks\": 5, \"Bans\": 6, \"Winrate\": 0.0, \"CSM\": 1.1, \"DPM\": 114.0, \"GPM\": 209.0, \"PC1\": -388.17972092476384, \"PC2\": -50.16398259086762}, {\"Champion\": \"\\u00a0KSante\", \"Picks\": 6, \"Bans\": 5, \"Winrate\": 33.0, \"CSM\": 7.1, \"DPM\": 359.0, \"GPM\": 361.0, \"PC1\": -107.199635031691, \"PC2\": 22.474959551073567}, {\"Champion\": \"\\u00a0Nautilus\", \"Picks\": 5, \"Bans\": 3, \"Winrate\": 40.0, \"CSM\": 1.2, \"DPM\": 199.0, \"GPM\": 248.0, \"PC1\": -294.472782002903, \"PC2\": -25.02287122268936}, {\"Champion\": \"\\u00a0Akali\", \"Picks\": 5, \"Bans\": 2, \"Winrate\": 0.0, \"CSM\": 8.2, \"DPM\": 444.0, \"GPM\": 352.0, \"PC1\": -30.036518034467235, \"PC2\": -23.96064379684026}, {\"Champion\": \"\\u00a0Braum\", \"Picks\": 4, \"Bans\": 3, \"Winrate\": 100.0, \"CSM\": 1.1, \"DPM\": 189.0, \"GPM\": 263.0, \"PC1\": -298.0304948890311, \"PC2\": 15.68848074949858}, {\"Champion\": \"\\u00a0Neeko\", \"Picks\": 5, \"Bans\": 2, \"Winrate\": 40.0, \"CSM\": 5.3, \"DPM\": 494.0, \"GPM\": 336.0, \"PC1\": 13.179623346594326, \"PC2\": -35.89953734111862}, {\"Champion\": \"\\u00a0Miss Fortune\", \"Picks\": 4, \"Bans\": 1, \"Winrate\": 75.0, \"CSM\": 9.7, \"DPM\": 885.0, \"GPM\": 487.0, \"PC1\": 432.44110475282184, \"PC2\": -6.287232113806965}, {\"Champion\": \"\\u00a0Wukong\", \"Picks\": 4, \"Bans\": 1, \"Winrate\": 50.0, \"CSM\": 5.9, \"DPM\": 392.0, \"GPM\": 352.0, \"PC1\": -78.40579910609284, \"PC2\": 11.964141802649124}, {\"Champion\": \"\\u00a0Sylas\", \"Picks\": 4, \"Bans\": 1, \"Winrate\": 100.0, \"CSM\": 8.5, \"DPM\": 548.0, \"GPM\": 437.0, \"PC1\": 97.38930194031298, \"PC2\": 60.06466929280134}]}}, {\"mode\": \"vega-lite\"});\n",
              "</script>"
            ],
            "text/plain": [
              "alt.Chart(...)"
            ]
          },
          "metadata": {},
          "execution_count": 28
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Factor Analysis\n",
        "fa = decomposition.FactorAnalysis(n_components=2)\n",
        "fa.fit(matrix2)\n",
        "tplt=fa.transform(matrix2)\n",
        "dfplt =df_3.copy()\n",
        "dfplt['PC1']=tplt[:,0]\n",
        "dfplt['PC2']=tplt[:,1]\n",
        "chart =alt.Chart(dfplt).mark_point().encode(\n",
        "    x='PC1',\n",
        "    y='PC2',\n",
        "    tooltip=['Champion','Winrate','Picks'],\n",
        "    color=alt.Color('Winrate', scale=alt.Scale(scheme='turbo'))\n",
        ")\n",
        "chart.save('visualisation.html')\n",
        "# On observe un clustering des champions selon leur rôle mais également selon leur fonction (hypercarry,...)"
      ],
      "metadata": {
        "id": "833AEqms2LbG"
      },
      "execution_count": 30,
      "outputs": []
    }
  ]
}
